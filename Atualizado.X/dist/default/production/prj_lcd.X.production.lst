

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Thu Jun 12 11:03:43 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1,group=1
    17                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=1
    19                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1,group=3
    22                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1,group=2
    24                           	psect	text12,global,reloc=2,class=CODE,space=0,delta=1,group=2
    25                           	psect	text13,global,reloc=2,class=CODE,space=0,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,space=0,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,space=0,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,space=0,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,space=0,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,space=0,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,space=0,delta=1
    32                           	psect	intcode,global,reloc=2,class=CODE,space=0,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,space=0,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    37                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    38   000000                     
    39                           ; Generated 17/10/2023 GMT
    40                           ; 
    41                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC18F4550 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73   000FE0                     bsr             equ	4064
    74   000FE9                     fsr0            equ	4073
    75   000FEA                     fsr0h           equ	4074
    76   000FE9                     fsr0l           equ	4073
    77   000FE1                     fsr1            equ	4065
    78   000FE2                     fsr1h           equ	4066
    79   000FE1                     fsr1l           equ	4065
    80   000FD9                     fsr2            equ	4057
    81   000FDA                     fsr2h           equ	4058
    82   000FD9                     fsr2l           equ	4057
    83   000FEF                     indf0           equ	4079
    84   000FE7                     indf1           equ	4071
    85   000FDF                     indf2           equ	4063
    86   000FF2                     intcon          equ	4082
    87   000000                     nvmcon          equ	0
    88   000FF9                     pcl             equ	4089
    89   000FFA                     pclath          equ	4090
    90   000FFB                     pclatu          equ	4091
    91   000FEB                     plusw0          equ	4075
    92   000FE3                     plusw1          equ	4067
    93   000FDB                     plusw2          equ	4059
    94   000FED                     postdec0        equ	4077
    95   000FE5                     postdec1        equ	4069
    96   000FDD                     postdec2        equ	4061
    97   000FEE                     postinc0        equ	4078
    98   000FE6                     postinc1        equ	4070
    99   000FDE                     postinc2        equ	4062
   100   000FEC                     preinc0         equ	4076
   101   000FE4                     preinc1         equ	4068
   102   000FDC                     preinc2         equ	4060
   103   000FF3                     prod            equ	4083
   104   000FF4                     prodh           equ	4084
   105   000FF3                     prodl           equ	4083
   106   000FD8                     status          equ	4056
   107   000FF5                     tablat          equ	4085
   108   000FF6                     tblptr          equ	4086
   109   000FF7                     tblptrh         equ	4087
   110   000FF6                     tblptrl         equ	4086
   111   000FF8                     tblptru         equ	4088
   112   000FFD                     tosl            equ	4093
   113   000FE8                     wreg            equ	4072
   114   000F62                     SPPDATA         equ	3938	;# 
   115   000F63                     SPPCFG          equ	3939	;# 
   116   000F64                     SPPEPS          equ	3940	;# 
   117   000F65                     SPPCON          equ	3941	;# 
   118   000F66                     UFRM            equ	3942	;# 
   119   000F66                     UFRML           equ	3942	;# 
   120   000F67                     UFRMH           equ	3943	;# 
   121   000F68                     UIR             equ	3944	;# 
   122   000F69                     UIE             equ	3945	;# 
   123   000F6A                     UEIR            equ	3946	;# 
   124   000F6B                     UEIE            equ	3947	;# 
   125   000F6C                     USTAT           equ	3948	;# 
   126   000F6D                     UCON            equ	3949	;# 
   127   000F6E                     UADDR           equ	3950	;# 
   128   000F6F                     UCFG            equ	3951	;# 
   129   000F70                     UEP0            equ	3952	;# 
   130   000F71                     UEP1            equ	3953	;# 
   131   000F72                     UEP2            equ	3954	;# 
   132   000F73                     UEP3            equ	3955	;# 
   133   000F74                     UEP4            equ	3956	;# 
   134   000F75                     UEP5            equ	3957	;# 
   135   000F76                     UEP6            equ	3958	;# 
   136   000F77                     UEP7            equ	3959	;# 
   137   000F78                     UEP8            equ	3960	;# 
   138   000F79                     UEP9            equ	3961	;# 
   139   000F7A                     UEP10           equ	3962	;# 
   140   000F7B                     UEP11           equ	3963	;# 
   141   000F7C                     UEP12           equ	3964	;# 
   142   000F7D                     UEP13           equ	3965	;# 
   143   000F7E                     UEP14           equ	3966	;# 
   144   000F7F                     UEP15           equ	3967	;# 
   145   000F80                     PORTA           equ	3968	;# 
   146   000F81                     PORTB           equ	3969	;# 
   147   000F82                     PORTC           equ	3970	;# 
   148   000F83                     PORTD           equ	3971	;# 
   149   000F84                     PORTE           equ	3972	;# 
   150   000F89                     LATA            equ	3977	;# 
   151   000F8A                     LATB            equ	3978	;# 
   152   000F8B                     LATC            equ	3979	;# 
   153   000F8C                     LATD            equ	3980	;# 
   154   000F8D                     LATE            equ	3981	;# 
   155   000F92                     TRISA           equ	3986	;# 
   156   000F92                     DDRA            equ	3986	;# 
   157   000F93                     TRISB           equ	3987	;# 
   158   000F93                     DDRB            equ	3987	;# 
   159   000F94                     TRISC           equ	3988	;# 
   160   000F94                     DDRC            equ	3988	;# 
   161   000F95                     TRISD           equ	3989	;# 
   162   000F95                     DDRD            equ	3989	;# 
   163   000F96                     TRISE           equ	3990	;# 
   164   000F96                     DDRE            equ	3990	;# 
   165   000F9B                     OSCTUNE         equ	3995	;# 
   166   000F9D                     PIE1            equ	3997	;# 
   167   000F9E                     PIR1            equ	3998	;# 
   168   000F9F                     IPR1            equ	3999	;# 
   169   000FA0                     PIE2            equ	4000	;# 
   170   000FA1                     PIR2            equ	4001	;# 
   171   000FA2                     IPR2            equ	4002	;# 
   172   000FA6                     EECON1          equ	4006	;# 
   173   000FA7                     EECON2          equ	4007	;# 
   174   000FA8                     EEDATA          equ	4008	;# 
   175   000FA9                     EEADR           equ	4009	;# 
   176   000FAB                     RCSTA           equ	4011	;# 
   177   000FAB                     RCSTA1          equ	4011	;# 
   178   000FAC                     TXSTA           equ	4012	;# 
   179   000FAC                     TXSTA1          equ	4012	;# 
   180   000FAD                     TXREG           equ	4013	;# 
   181   000FAD                     TXREG1          equ	4013	;# 
   182   000FAE                     RCREG           equ	4014	;# 
   183   000FAE                     RCREG1          equ	4014	;# 
   184   000FAF                     SPBRG           equ	4015	;# 
   185   000FAF                     SPBRG1          equ	4015	;# 
   186   000FB0                     SPBRGH          equ	4016	;# 
   187   000FB1                     T3CON           equ	4017	;# 
   188   000FB2                     TMR3            equ	4018	;# 
   189   000FB2                     TMR3L           equ	4018	;# 
   190   000FB3                     TMR3H           equ	4019	;# 
   191   000FB4                     CMCON           equ	4020	;# 
   192   000FB5                     CVRCON          equ	4021	;# 
   193   000FB6                     ECCP1AS         equ	4022	;# 
   194   000FB6                     CCP1AS          equ	4022	;# 
   195   000FB7                     ECCP1DEL        equ	4023	;# 
   196   000FB7                     CCP1DEL         equ	4023	;# 
   197   000FB8                     BAUDCON         equ	4024	;# 
   198   000FB8                     BAUDCTL         equ	4024	;# 
   199   000FBA                     CCP2CON         equ	4026	;# 
   200   000FBB                     CCPR2           equ	4027	;# 
   201   000FBB                     CCPR2L          equ	4027	;# 
   202   000FBC                     CCPR2H          equ	4028	;# 
   203   000FBD                     CCP1CON         equ	4029	;# 
   204   000FBD                     ECCP1CON        equ	4029	;# 
   205   000FBE                     CCPR1           equ	4030	;# 
   206   000FBE                     CCPR1L          equ	4030	;# 
   207   000FBF                     CCPR1H          equ	4031	;# 
   208   000FC0                     ADCON2          equ	4032	;# 
   209   000FC1                     ADCON1          equ	4033	;# 
   210   000FC2                     ADCON0          equ	4034	;# 
   211   000FC3                     ADRES           equ	4035	;# 
   212   000FC3                     ADRESL          equ	4035	;# 
   213   000FC4                     ADRESH          equ	4036	;# 
   214   000FC5                     SSPCON2         equ	4037	;# 
   215   000FC6                     SSPCON1         equ	4038	;# 
   216   000FC7                     SSPSTAT         equ	4039	;# 
   217   000FC8                     SSPADD          equ	4040	;# 
   218   000FC9                     SSPBUF          equ	4041	;# 
   219   000FCA                     T2CON           equ	4042	;# 
   220   000FCB                     PR2             equ	4043	;# 
   221   000FCB                     MEMCON          equ	4043	;# 
   222   000FCC                     TMR2            equ	4044	;# 
   223   000FCD                     T1CON           equ	4045	;# 
   224   000FCE                     TMR1            equ	4046	;# 
   225   000FCE                     TMR1L           equ	4046	;# 
   226   000FCF                     TMR1H           equ	4047	;# 
   227   000FD0                     RCON            equ	4048	;# 
   228   000FD1                     WDTCON          equ	4049	;# 
   229   000FD2                     HLVDCON         equ	4050	;# 
   230   000FD2                     LVDCON          equ	4050	;# 
   231   000FD3                     OSCCON          equ	4051	;# 
   232   000FD5                     T0CON           equ	4053	;# 
   233   000FD6                     TMR0            equ	4054	;# 
   234   000FD6                     TMR0L           equ	4054	;# 
   235   000FD7                     TMR0H           equ	4055	;# 
   236   000FD8                     STATUS          equ	4056	;# 
   237   000FD9                     FSR2            equ	4057	;# 
   238   000FD9                     FSR2L           equ	4057	;# 
   239   000FDA                     FSR2H           equ	4058	;# 
   240   000FDB                     PLUSW2          equ	4059	;# 
   241   000FDC                     PREINC2         equ	4060	;# 
   242   000FDD                     POSTDEC2        equ	4061	;# 
   243   000FDE                     POSTINC2        equ	4062	;# 
   244   000FDF                     INDF2           equ	4063	;# 
   245   000FE0                     BSR             equ	4064	;# 
   246   000FE1                     FSR1            equ	4065	;# 
   247   000FE1                     FSR1L           equ	4065	;# 
   248   000FE2                     FSR1H           equ	4066	;# 
   249   000FE3                     PLUSW1          equ	4067	;# 
   250   000FE4                     PREINC1         equ	4068	;# 
   251   000FE5                     POSTDEC1        equ	4069	;# 
   252   000FE6                     POSTINC1        equ	4070	;# 
   253   000FE7                     INDF1           equ	4071	;# 
   254   000FE8                     WREG            equ	4072	;# 
   255   000FE9                     FSR0            equ	4073	;# 
   256   000FE9                     FSR0L           equ	4073	;# 
   257   000FEA                     FSR0H           equ	4074	;# 
   258   000FEB                     PLUSW0          equ	4075	;# 
   259   000FEC                     PREINC0         equ	4076	;# 
   260   000FED                     POSTDEC0        equ	4077	;# 
   261   000FEE                     POSTINC0        equ	4078	;# 
   262   000FEF                     INDF0           equ	4079	;# 
   263   000FF0                     INTCON3         equ	4080	;# 
   264   000FF1                     INTCON2         equ	4081	;# 
   265   000FF2                     INTCON          equ	4082	;# 
   266   000FF3                     PROD            equ	4083	;# 
   267   000FF3                     PRODL           equ	4083	;# 
   268   000FF4                     PRODH           equ	4084	;# 
   269   000FF5                     TABLAT          equ	4085	;# 
   270   000FF6                     TBLPTR          equ	4086	;# 
   271   000FF6                     TBLPTRL         equ	4086	;# 
   272   000FF7                     TBLPTRH         equ	4087	;# 
   273   000FF8                     TBLPTRU         equ	4088	;# 
   274   000FF9                     PCLAT           equ	4089	;# 
   275   000FF9                     PC              equ	4089	;# 
   276   000FF9                     PCL             equ	4089	;# 
   277   000FFA                     PCLATH          equ	4090	;# 
   278   000FFB                     PCLATU          equ	4091	;# 
   279   000FFC                     STKPTR          equ	4092	;# 
   280   000FFD                     TOS             equ	4093	;# 
   281   000FFD                     TOSL            equ	4093	;# 
   282   000FFE                     TOSH            equ	4094	;# 
   283   000FFF                     TOSU            equ	4095	;# 
   284                           
   285                           	psect	idataBANK0
   286   001478                     __pidataBANK0:
   287                           	callstack 0
   288                           
   289                           ;initializer for Inicializa_LCD@ini
   290   001478  38                 	db	56
   291   001479  38                 	db	56
   292   00147A  38                 	db	56
   293   00147B  0C                 	db	12
   294   00147C  06                 	db	6
   295   00147D  01                 	db	1
   296   00147E  00                 	db	0
   297   000F95                     _TRISDbits      set	3989
   298   000F83                     _PORTDbits      set	3971
   299   000F8C                     _LATDbits       set	3980
   300   000FF1                     _INTCON2bits    set	4081
   301   000F8B                     _LATCbits       set	3979
   302   000F8C                     _LATD           set	3980
   303   000F82                     _PORTCbits      set	3970
   304   000F94                     _TRISCbits      set	3988
   305   000F93                     _TRISBbits      set	3987
   306   000F92                     _TRISAbits      set	3986
   307   000FF2                     _INTCONbits     set	4082
   308   000FC3                     _ADRESL         set	4035
   309   000FC4                     _ADRESH         set	4036
   310   000FC2                     _ADCON0bits     set	4034
   311   000FC0                     _ADCON2         set	4032
   312   000FC2                     _ADCON0         set	4034
   313   000F96                     _TRISE          set	3990
   314   000F95                     _TRISD          set	3989
   315   000F84                     _PORTE          set	3972
   316   000FC1                     _ADCON1         set	4033
   317   000F83                     _PORTD          set	3971
   318   000F84                     _PORTEbits      set	3972
   319                           
   320                           	psect	smallconst
   321   000800                     __psmallconst:
   322                           	callstack 0
   323   000800  00                 	db	0
   324   000801                     STR_4:
   325   000801  20                 	db	32
   326   000802  20                 	db	32
   327   000803  20                 	db	32
   328   000804  20                 	db	32
   329   000805  20                 	db	32
   330   000806  20                 	db	32
   331   000807  20                 	db	32
   332   000808  20                 	db	32
   333   000809  20                 	db	32
   334   00080A  20                 	db	32
   335   00080B  20                 	db	32
   336   00080C  20                 	db	32
   337   00080D  20                 	db	32
   338   00080E  20                 	db	32
   339   00080F  20                 	db	32
   340   000810  20                 	db	32
   341   000811  00                 	db	0
   342   000812                     STR_7:
   343   000812  47                 	db	71	;'G'
   344   000813  61                 	db	97	;'a'
   345   000814  73                 	db	115	;'s'
   346   000815  20                 	db	32
   347   000816  44                 	db	68	;'D'
   348   000817  65                 	db	101	;'e'
   349   000818  74                 	db	116	;'t'
   350   000819  65                 	db	101	;'e'
   351   00081A  63                 	db	99	;'c'
   352   00081B  74                 	db	116	;'t'
   353   00081C  61                 	db	97	;'a'
   354   00081D  64                 	db	100	;'d'
   355   00081E  6F                 	db	111	;'o'
   356   00081F  00                 	db	0
   357   000820                     STR_6:
   358   000820  41                 	db	65	;'A'
   359   000821  6C                 	db	108	;'l'
   360   000822  65                 	db	101	;'e'
   361   000823  72                 	db	114	;'r'
   362   000824  74                 	db	116	;'t'
   363   000825  61                 	db	97	;'a'
   364   000826  3A                 	db	58	;':'
   365   000827  20                 	db	32
   366   000828  47                 	db	71	;'G'
   367   000829  61                 	db	97	;'a'
   368   00082A  73                 	db	115	;'s'
   369   00082B  21                 	db	33
   370   00082C  00                 	db	0
   371   00082D                     STR_1:
   372   00082D  49                 	db	73	;'I'
   373   00082E  6E                 	db	110	;'n'
   374   00082F  69                 	db	105	;'i'
   375   000830  63                 	db	99	;'c'
   376   000831  69                 	db	105	;'i'
   377   000832  61                 	db	97	;'a'
   378   000833  6E                 	db	110	;'n'
   379   000834  64                 	db	100	;'d'
   380   000835  6F                 	db	111	;'o'
   381   000836  2E                 	db	46
   382   000837  2E                 	db	46
   383   000838  2E                 	db	46
   384   000839  00                 	db	0
   385   00083A                     STR_2:
   386   00083A  53                 	db	83	;'S'
   387   00083B  65                 	db	101	;'e'
   388   00083C  6E                 	db	110	;'n'
   389   00083D  73                 	db	115	;'s'
   390   00083E  6F                 	db	111	;'o'
   391   00083F  72                 	db	114	;'r'
   392   000840  20                 	db	32
   393   000841  4D                 	db	77	;'M'
   394   000842  51                 	db	81	;'Q'
   395   000843  2D                 	db	45
   396   000844  32                 	db	50	;'2'
   397   000845  00                 	db	0
   398   000846                     STR_5:
   399   000846  41                 	db	65	;'A'
   400   000847  44                 	db	68	;'D'
   401   000848  43                 	db	67	;'C'
   402   000849  3A                 	db	58	;':'
   403   00084A  20                 	db	32
   404   00084B  25                 	db	37
   405   00084C  30                 	db	48	;'0'
   406   00084D  34                 	db	52	;'4'
   407   00084E  64                 	db	100	;'d'
   408   00084F  00                 	db	0
   409   000850                     STR_8:
   410   000850  41                 	db	65	;'A'
   411   000851  72                 	db	114	;'r'
   412   000852  20                 	db	32
   413   000853  50                 	db	80	;'P'
   414   000854  75                 	db	117	;'u'
   415   000855  72                 	db	114	;'r'
   416   000856  6F                 	db	111	;'o'
   417   000857  00                 	db	0
   418   00082D                     STR_3           equ	STR_1
   419   000858  00                 	db	0	; dummy byte at the end
   420   000800                     __smallconst    set	__psmallconst
   421   000800                     __mediumconst   set	__psmallconst
   422   000002                     __activetblptr  equ	2
   423                           
   424                           ; #config settings
   425                           
   426                           	psect	cinit
   427   001284                     __pcinit:
   428                           	callstack 0
   429   001284                     start_initialization:
   430                           	callstack 0
   431   001284                     __initialization:
   432                           	callstack 0
   433                           
   434                           ; Initialize objects allocated to BANK0 (7 bytes)
   435                           ; load TBLPTR registers with __pidataBANK0
   436   001284  0E78               	movlw	low __pidataBANK0
   437   001286  6EF6               	movwf	tblptrl,c
   438   001288  0E14               	movlw	high __pidataBANK0
   439   00128A  6EF7               	movwf	tblptrh,c
   440   00128C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   441   00128E  6EF8               	movwf	tblptru,c
   442   001290  EE00  F080         	lfsr	0,__pdataBANK0
   443   001294  EE10 F007          	lfsr	1,7
   444   001298                     copy_data0:
   445   001298  0009               	tblrd		*+
   446   00129A  CFF5 FFEE          	movff	tablat,postinc0
   447   00129E  50E5               	movf	postdec1,w,c
   448   0012A0  50E1               	movf	fsr1l,w,c
   449   0012A2  E1FA               	bnz	copy_data0
   450                           
   451                           ; Clear objects allocated to BANK0 (32 bytes)
   452   0012A4  EE00  F060         	lfsr	0,__pbssBANK0
   453   0012A8  0E20               	movlw	32
   454   0012AA                     clear_0:
   455   0012AA  6AEE               	clrf	postinc0,c
   456   0012AC  06E8               	decf	wreg,f,c
   457   0012AE  E1FD               	bnz	clear_0
   458                           
   459                           ; Clear objects allocated to COMRAM (7 bytes)
   460   0012B0  EE00  F052         	lfsr	0,__pbssCOMRAM
   461   0012B4  0E07               	movlw	7
   462   0012B6                     clear_1:
   463   0012B6  6AEE               	clrf	postinc0,c
   464   0012B8  06E8               	decf	wreg,f,c
   465   0012BA  E1FD               	bnz	clear_1
   466   0012BC                     end_of_initialization:
   467                           	callstack 0
   468   0012BC                     __end_of__initialization:
   469                           	callstack 0
   470   0012BC  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   471   0012BE  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   472   0012C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   473   0012C2  6EF8               	movwf	tblptru,c
   474   0012C4  0100               	movlb	0
   475   0012C6  EF2D  F004         	goto	_main	;jump to C main() function
   476                           
   477                           	psect	bssCOMRAM
   478   000052                     __pbssCOMRAM:
   479                           	callstack 0
   480   000052                     _width:
   481                           	callstack 0
   482   000052                     	ds	2
   483   000054                     _prec:
   484                           	callstack 0
   485   000054                     	ds	2
   486   000056                     _flags:
   487                           	callstack 0
   488   000056                     	ds	1
   489   000057                     _alerta_ativo:
   490                           	callstack 0
   491   000057                     	ds	1
   492   000058                     _alarme_ativo:
   493                           	callstack 0
   494   000058                     	ds	1
   495                           
   496                           	psect	bssBANK0
   497   000060                     __pbssBANK0:
   498                           	callstack 0
   499   000060                     _dbuf:
   500                           	callstack 0
   501   000060                     	ds	32
   502                           
   503                           	psect	dataBANK0
   504   000080                     __pdataBANK0:
   505                           	callstack 0
   506   000080                     Inicializa_LCD@ini:
   507                           	callstack 0
   508   000080                     	ds	7
   509                           
   510                           	psect	cstackCOMRAM
   511   000001                     __pcstackCOMRAM:
   512                           	callstack 0
   513   000001                     ?_read_adc:
   514                           	callstack 0
   515   000001                     ?___awdiv:
   516                           	callstack 0
   517   000001                     ?___awmod:
   518                           	callstack 0
   519   000001                     ?_read_prec_or_width:
   520                           	callstack 0
   521   000001                     read_prec_or_width@fmt:
   522                           	callstack 0
   523   000001                     ___awdiv@dividend:
   524                           	callstack 0
   525   000001                     ___awmod@dividend:
   526                           	callstack 0
   527   000001                     fputc@c:
   528                           	callstack 0
   529   000001                     ??_Comando_LCD:
   530   000001                     ??_Escreve_C_LCD:
   531   000001                     
   532                           ; 1 bytes @ 0x0
   533   000001                     	ds	1
   534   000002                     Comando_LCD@comando:
   535                           	callstack 0
   536   000002                     Escreve_C_LCD@caracter:
   537                           	callstack 0
   538   000002                     read_prec_or_width@ap:
   539                           	callstack 0
   540                           
   541                           ; 1 bytes @ 0x1
   542   000002                     	ds	1
   543   000003                     Posiciona_LCD@coluna:
   544                           	callstack 0
   545   000003                     fputc@fp:
   546                           	callstack 0
   547   000003                     Escreve_LCD@caracter:
   548                           	callstack 0
   549   000003                     ___awdiv@divisor:
   550                           	callstack 0
   551   000003                     ___awmod@divisor:
   552                           	callstack 0
   553   000003                     ??_Inicializa_LCD:
   554   000003                     ??_read_adc:
   555   000003                     ??_read_prec_or_width:
   556                           
   557                           ; 1 bytes @ 0x2
   558   000003                     	ds	1
   559   000004                     Posiciona_LCD@linha:
   560                           	callstack 0
   561   000004                     Inicializa_LCD@x:
   562                           	callstack 0
   563   000004                     ??_fputc:
   564   000004                     
   565                           ; 1 bytes @ 0x3
   566   000004                     	ds	1
   567   000005                     Posiciona_LCD@x:
   568                           	callstack 0
   569   000005                     ___awdiv@counter:
   570                           	callstack 0
   571   000005                     ___awmod@counter:
   572                           	callstack 0
   573   000005                     read_prec_or_width@c:
   574                           	callstack 0
   575   000005                     ??_Escreve_LCD:
   576   000005                     
   577                           ; 1 bytes @ 0x4
   578   000005                     	ds	1
   579   000006                     ___awdiv@sign:
   580                           	callstack 0
   581   000006                     ___awmod@sign:
   582                           	callstack 0
   583   000006                     read_prec_or_width@n:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x5
   587   000006                     	ds	1
   588   000007                     ?_abs:
   589                           	callstack 0
   590   000007                     ___awdiv@quotient:
   591                           	callstack 0
   592   000007                     abs@a:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x6
   596   000007                     	ds	2
   597   000009                     fputs@s:
   598                           	callstack 0
   599   000009                     ??_abs:
   600                           
   601                           ; 1 bytes @ 0x8
   602   000009                     	ds	1
   603   00000A                     fputs@fp:
   604                           	callstack 0
   605                           
   606                           ; 1 bytes @ 0x9
   607   00000A                     	ds	1
   608   00000B                     fputs@c:
   609                           	callstack 0
   610   00000B                     
   611                           ; 1 bytes @ 0xA
   612   00000B                     	ds	1
   613   00000C                     fputs@i:
   614                           	callstack 0
   615                           
   616                           ; 2 bytes @ 0xB
   617   00000C                     	ds	2
   618   00000E                     pad@fp:
   619                           	callstack 0
   620                           
   621                           ; 1 bytes @ 0xD
   622   00000E                     	ds	1
   623   00000F                     pad@buf:
   624                           	callstack 0
   625                           
   626                           ; 1 bytes @ 0xE
   627   00000F                     	ds	1
   628   000010                     pad@p:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0xF
   632   000010                     	ds	2
   633   000012                     ??_pad:
   634                           
   635                           ; 1 bytes @ 0x11
   636   000012                     	ds	1
   637   000013                     pad@i:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x12
   641   000013                     	ds	2
   642   000015                     dtoa@fp:
   643                           	callstack 0
   644                           
   645                           ; 1 bytes @ 0x14
   646   000015                     	ds	1
   647   000016                     dtoa@d:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x15
   651   000016                     	ds	2
   652   000018                     _dtoa$1262:
   653                           	callstack 0
   654   000018                     
   655                           ; 1 bytes @ 0x17
   656   000018                     	ds	2
   657   00001A                     dtoa@p:
   658                           	callstack 0
   659                           
   660                           ; 1 bytes @ 0x19
   661   00001A                     	ds	1
   662   00001B                     dtoa@w:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x1A
   666   00001B                     	ds	2
   667   00001D                     dtoa@s:
   668                           	callstack 0
   669                           
   670                           ; 1 bytes @ 0x1C
   671   00001D                     	ds	1
   672   00001E                     dtoa@i:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x1D
   676   00001E                     	ds	2
   677   000020                     vfpfcnvrt@fp:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x1F
   681   000020                     	ds	1
   682   000021                     vfpfcnvrt@fmt:
   683                           	callstack 0
   684                           
   685                           ; 1 bytes @ 0x20
   686   000021                     	ds	1
   687   000022                     vfpfcnvrt@ap:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x21
   691   000022                     	ds	1
   692   000023                     vfpfcnvrt@convarg:
   693                           	callstack 0
   694   000023                     
   695                           ; 1 bytes @ 0x22
   696   000023                     	ds	4
   697   000027                     vfpfcnvrt@done:
   698                           	callstack 0
   699                           
   700                           ; 1 bytes @ 0x26
   701   000027                     	ds	1
   702   000028                     vfpfcnvrt@cp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x27
   706   000028                     	ds	1
   707   000029                     ?_vfprintf:
   708                           	callstack 0
   709   000029                     vfprintf@fp:
   710                           	callstack 0
   711                           
   712                           ; 1 bytes @ 0x28
   713   000029                     	ds	1
   714   00002A                     vfprintf@fmt:
   715                           	callstack 0
   716                           
   717                           ; 1 bytes @ 0x29
   718   00002A                     	ds	1
   719   00002B                     vfprintf@ap:
   720                           	callstack 0
   721                           
   722                           ; 1 bytes @ 0x2A
   723   00002B                     	ds	1
   724   00002C                     vfprintf@cfmt:
   725                           	callstack 0
   726   00002C                     
   727                           ; 1 bytes @ 0x2B
   728   00002C                     	ds	1
   729   00002D                     ?_sprintf:
   730                           	callstack 0
   731   00002D                     sprintf@s:
   732                           	callstack 0
   733                           
   734                           ; 1 bytes @ 0x2C
   735   00002D                     	ds	1
   736   00002E                     sprintf@fmt:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0x2D
   740   00002E                     	ds	3
   741   000031                     sprintf@ap:
   742                           	callstack 0
   743   000031                     
   744                           ; 1 bytes @ 0x30
   745   000031                     	ds	1
   746   000032                     sprintf@f:
   747                           	callstack 0
   748                           
   749                           ; 11 bytes @ 0x31
   750   000032                     	ds	11
   751   00003D                     ??_main:
   752                           
   753                           ; 1 bytes @ 0x3C
   754   00003D                     	ds	2
   755   00003F                     main@lcd_buffer:
   756                           	callstack 0
   757                           
   758                           ; 17 bytes @ 0x3E
   759   00003F                     	ds	17
   760   000050                     main@adc_value:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x4F
   764   000050                     	ds	2
   765                           
   766 ;;
   767 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   768 ;;
   769 ;; *************** function _main *****************
   770 ;; Defined at:
   771 ;;		line 57 in file "main.c"
   772 ;; Parameters:    Size  Location     Type
   773 ;;		None
   774 ;; Auto vars:     Size  Location     Type
   775 ;;  adc_value       2   79[COMRAM] unsigned int 
   776 ;;  lcd_buffer     17   62[COMRAM] unsigned char [17]
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   786 ;;      Params:         0       0       0       0       0       0       0       0       0
   787 ;;      Locals:        19       0       0       0       0       0       0       0       0
   788 ;;      Temps:          2       0       0       0       0       0       0       0       0
   789 ;;      Totals:        21       0       0       0       0       0       0       0       0
   790 ;;Total ram usage:       21 bytes
   791 ;; Hardware stack levels required when called: 9
   792 ;; This function calls:
   793 ;;		_Escreve_LCD
   794 ;;		_Inicializa_LCD
   795 ;;		_Posiciona_LCD
   796 ;;		_read_adc
   797 ;;		_setup_adc
   798 ;;		_sprintf
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           	psect	text0
   805   00085A                     __ptext0:
   806                           	callstack 0
   807   00085A                     _main:
   808                           	callstack 22
   809   00085A                     
   810                           ;main.c: 60: ;main.c: 63:     INTCONbits.INT0IF = 0;
   811   00085A  8092               	bsf	146,0,c	;volatile
   812   00085C                     
   813                           ;main.c: 66: 
   814   00085C  EC35  F00A         	call	_setup_adc	;wreg free
   815   000860                     
   816                           ;main.c: 69:     Escreve_LCD("Sensor MQ-2");
   817   000860  EC19  F009         	call	_Inicializa_LCD	;wreg free
   818   000864                     
   819                           ;main.c: 71:     Escreve_LCD("Iniciando...");
   820   000864  0E01               	movlw	1
   821   000866  6E03               	movwf	Posiciona_LCD@coluna^0,c
   822   000868  0E01               	movlw	1
   823   00086A  ECAA  F008         	call	_Posiciona_LCD
   824   00086E                     
   825                           ;main.c: 72: 
   826   00086E  0E2D               	movlw	low STR_1
   827   000870  6E03               	movwf	Escreve_LCD@caracter^0,c
   828   000872  5003               	movf	Escreve_LCD@caracter^0,w,c
   829   000874  A4D8               	btfss	status,2,c
   830   000876  0E08               	movlw	high __smallconst
   831   000878  6E04               	movwf	(Escreve_LCD@caracter+1)^0,c
   832   00087A  ECE2  F008         	call	_Escreve_LCD	;wreg free
   833   00087E                     
   834                           ;main.c: 74: 
   835   00087E  8093               	bsf	147,0,c	;volatile
   836   000880                     
   837                           ;main.c: 75: 
   838   000880  6A95               	clrf	149,c	;volatile
   839   000882                     
   840                           ;main.c: 76: 
   841   000882  9494               	bcf	148,2,c	;volatile
   842   000884                     
   843                           ;main.c: 77:     _delay((unsigned long)((2000)*(20000000/4000.0)));
   844   000884  9294               	bcf	148,1,c	;volatile
   845   000886                     
   846                           ;main.c: 80:     while(1){
   847   000886  9282               	bcf	130,1,c	;volatile
   848   000888                     
   849                           ;main.c: 81:         if(alarme_ativo){
   850   000888  6A8C               	clrf	140,c	;volatile
   851   00088A                     
   852                           ;main.c: 82: 
   853   00088A  948B               	bcf	139,2,c	;volatile
   854   00088C                     
   855                           ;main.c: 85:             LATDbits.LATD7 = !PORTDbits.RD7;
   856   00088C  8EF2               	bsf	242,7,c	;volatile
   857   00088E                     
   858                           ;main.c: 86:             LATDbits.LATD6 = !PORTDbits.RD6;
   859   00088E  88F2               	bsf	242,4,c	;volatile
   860   000890                     
   861                           ;main.c: 87:             LATDbits.LATD5 = !PORTDbits.RD5;
   862   000890  92F2               	bcf	242,1,c	;volatile
   863   000892                     
   864                           ;main.c: 88:             LATDbits.LATD4 = !PORTDbits.RD4;
   865   000892  8EF1               	bsf	241,7,c	;volatile
   866   000894                     
   867                           ;main.c: 89:             LATDbits.LATD3 = !PORTDbits.RD3;
   868   000894  8CF1               	bsf	241,6,c	;volatile
   869   000896                     
   870                           ;main.c: 92:             LATDbits.LATD0 = !PORTDbits.RD0;
   871   000896  0E01               	movlw	1
   872   000898  6E03               	movwf	Posiciona_LCD@coluna^0,c
   873   00089A  0E01               	movlw	1
   874   00089C  ECAA  F008         	call	_Posiciona_LCD
   875   0008A0                     
   876                           ;main.c: 93:             LATCbits.LATC2 = !PORTCbits.RC2;
   877   0008A0  0E3A               	movlw	low STR_2
   878   0008A2  6E03               	movwf	Escreve_LCD@caracter^0,c
   879   0008A4  5003               	movf	Escreve_LCD@caracter^0,w,c
   880   0008A6  A4D8               	btfss	status,2,c
   881   0008A8  0E08               	movlw	high __smallconst
   882   0008AA  6E04               	movwf	(Escreve_LCD@caracter+1)^0,c
   883   0008AC  ECE2  F008         	call	_Escreve_LCD	;wreg free
   884   0008B0                     
   885                           ;main.c: 94:             _delay((unsigned long)((100000)*(20000000/4000000.0)));
   886   0008B0  0E01               	movlw	1
   887   0008B2  6E03               	movwf	Posiciona_LCD@coluna^0,c
   888   0008B4  0E02               	movlw	2
   889   0008B6  ECAA  F008         	call	_Posiciona_LCD
   890   0008BA                     
   891                           ;main.c: 95: 
   892   0008BA  0E2D               	movlw	low STR_1
   893   0008BC  6E03               	movwf	Escreve_LCD@caracter^0,c
   894   0008BE  5003               	movf	Escreve_LCD@caracter^0,w,c
   895   0008C0  A4D8               	btfss	status,2,c
   896   0008C2  0E08               	movlw	high __smallconst
   897   0008C4  6E04               	movwf	(Escreve_LCD@caracter+1)^0,c
   898   0008C6  ECE2  F008         	call	_Escreve_LCD	;wreg free
   899   0008CA                     
   900                           ;main.c: 97: 
   901   0008CA  0E01               	movlw	1
   902   0008CC  6E58               	movwf	_alarme_ativo^0,c	;volatile
   903   0008CE                     
   904                           ;main.c: 101:             TRISDbits.TRISD5 = 0;
   905   0008CE  0E33               	movlw	51
   906   0008D0  6E3E               	movwf	(??_main+1)^0,c
   907   0008D2  0EBB               	movlw	187
   908   0008D4  6E3D               	movwf	??_main^0,c
   909   0008D6  0EE0               	movlw	224
   910   0008D8                     u1427:
   911   0008D8  2EE8               	decfsz	wreg,f,c
   912   0008DA  D7FE               	bra	u1427
   913   0008DC  2E3D               	decfsz	??_main^0,f,c
   914   0008DE  D7FC               	bra	u1427
   915   0008E0  2E3E               	decfsz	(??_main+1)^0,f,c
   916   0008E2  D7FA               	bra	u1427
   917   0008E4                     l1697:
   918                           
   919                           ;main.c: 105:             TRISDbits.TRISD1 = 0;
   920   0008E4  5058               	movf	_alarme_ativo^0,w,c	;volatile
   921   0008E6  B4D8               	btfsc	status,2,c
   922   0008E8  EF78  F004         	goto	u1191
   923   0008EC  EF7A  F004         	goto	u1190
   924   0008F0                     u1191:
   925   0008F0  EF2E  F005         	goto	l104
   926   0008F4                     u1190:
   927   0008F4                     
   928                           ;main.c: 108:         }
   929   0008F4  A282               	btfss	130,1,c	;volatile
   930   0008F6  EF7F  F004         	goto	u1201
   931   0008FA  EF83  F004         	goto	u1200
   932   0008FE                     u1201:
   933   0008FE  6A3D               	clrf	??_main^0,c
   934   000900  2A3D               	incf	??_main^0,f,c
   935   000902  EF84  F004         	goto	u1218
   936   000906                     u1200:
   937   000906  6A3D               	clrf	??_main^0,c
   938   000908                     u1218:
   939   000908  463D               	rlncf	??_main^0,f,c
   940   00090A  508B               	movf	139,w,c	;volatile
   941   00090C  183D               	xorwf	??_main^0,w,c
   942   00090E  0BFD               	andlw	-3
   943   000910  183D               	xorwf	??_main^0,w,c
   944   000912  6E8B               	movwf	139,c	;volatile
   945                           
   946                           ;main.c: 109: 
   947   000914  AE83               	btfss	131,7,c	;volatile
   948   000916  EF8F  F004         	goto	u1221
   949   00091A  EF93  F004         	goto	u1220
   950   00091E                     u1221:
   951   00091E  6A3D               	clrf	??_main^0,c
   952   000920  2A3D               	incf	??_main^0,f,c
   953   000922  EF94  F004         	goto	u1238
   954   000926                     u1220:
   955   000926  6A3D               	clrf	??_main^0,c
   956   000928                     u1238:
   957   000928  323D               	rrcf	??_main^0,f,c
   958   00092A  323D               	rrcf	??_main^0,f,c
   959   00092C  508C               	movf	140,w,c	;volatile
   960   00092E  183D               	xorwf	??_main^0,w,c
   961   000930  0B7F               	andlw	-129
   962   000932  183D               	xorwf	??_main^0,w,c
   963   000934  6E8C               	movwf	140,c	;volatile
   964                           
   965                           ;main.c: 110: 
   966   000936  AC83               	btfss	131,6,c	;volatile
   967   000938  EFA0  F004         	goto	u1241
   968   00093C  EFA4  F004         	goto	u1240
   969   000940                     u1241:
   970   000940  6A3D               	clrf	??_main^0,c
   971   000942  2A3D               	incf	??_main^0,f,c
   972   000944  EFA5  F004         	goto	u1258
   973   000948                     u1240:
   974   000948  6A3D               	clrf	??_main^0,c
   975   00094A                     u1258:
   976   00094A  3A3D               	swapf	??_main^0,f,c
   977   00094C  463D               	rlncf	??_main^0,f,c
   978   00094E  463D               	rlncf	??_main^0,f,c
   979   000950  508C               	movf	140,w,c	;volatile
   980   000952  183D               	xorwf	??_main^0,w,c
   981   000954  0BBF               	andlw	-65
   982   000956  183D               	xorwf	??_main^0,w,c
   983   000958  6E8C               	movwf	140,c	;volatile
   984                           
   985                           ;main.c: 111:         unsigned int adc_value = read_adc();
   986   00095A  AA83               	btfss	131,5,c	;volatile
   987   00095C  EFB2  F004         	goto	u1261
   988   000960  EFB6  F004         	goto	u1260
   989   000964                     u1261:
   990   000964  6A3D               	clrf	??_main^0,c
   991   000966  2A3D               	incf	??_main^0,f,c
   992   000968  EFB7  F004         	goto	u1278
   993   00096C                     u1260:
   994   00096C  6A3D               	clrf	??_main^0,c
   995   00096E                     u1278:
   996   00096E  3A3D               	swapf	??_main^0,f,c
   997   000970  463D               	rlncf	??_main^0,f,c
   998   000972  508C               	movf	140,w,c	;volatile
   999   000974  183D               	xorwf	??_main^0,w,c
  1000   000976  0BDF               	andlw	-33
  1001   000978  183D               	xorwf	??_main^0,w,c
  1002   00097A  6E8C               	movwf	140,c	;volatile
  1003                           
  1004                           ;main.c: 112: 
  1005   00097C  A883               	btfss	131,4,c	;volatile
  1006   00097E  EFC3  F004         	goto	u1281
  1007   000982  EFC7  F004         	goto	u1280
  1008   000986                     u1281:
  1009   000986  6A3D               	clrf	??_main^0,c
  1010   000988  2A3D               	incf	??_main^0,f,c
  1011   00098A  EFC8  F004         	goto	u1298
  1012   00098E                     u1280:
  1013   00098E  6A3D               	clrf	??_main^0,c
  1014   000990                     u1298:
  1015   000990  3A3D               	swapf	??_main^0,f,c
  1016   000992  508C               	movf	140,w,c	;volatile
  1017   000994  183D               	xorwf	??_main^0,w,c
  1018   000996  0BEF               	andlw	-17
  1019   000998  183D               	xorwf	??_main^0,w,c
  1020   00099A  6E8C               	movwf	140,c	;volatile
  1021                           
  1022                           ;main.c: 113: 
  1023   00099C  A683               	btfss	131,3,c	;volatile
  1024   00099E  EFD3  F004         	goto	u1301
  1025   0009A2  EFD7  F004         	goto	u1300
  1026   0009A6                     u1301:
  1027   0009A6  6A3D               	clrf	??_main^0,c
  1028   0009A8  2A3D               	incf	??_main^0,f,c
  1029   0009AA  EFD8  F004         	goto	u1318
  1030   0009AE                     u1300:
  1031   0009AE  6A3D               	clrf	??_main^0,c
  1032   0009B0                     u1318:
  1033   0009B0  463D               	rlncf	??_main^0,f,c
  1034   0009B2  463D               	rlncf	??_main^0,f,c
  1035   0009B4  463D               	rlncf	??_main^0,f,c
  1036   0009B6  508C               	movf	140,w,c	;volatile
  1037   0009B8  183D               	xorwf	??_main^0,w,c
  1038   0009BA  0BF7               	andlw	-9
  1039   0009BC  183D               	xorwf	??_main^0,w,c
  1040   0009BE  6E8C               	movwf	140,c	;volatile
  1041                           
  1042                           ;main.c: 114:         Posiciona_LCD(2,1);
  1043   0009C0  A483               	btfss	131,2,c	;volatile
  1044   0009C2  EFE5  F004         	goto	u1321
  1045   0009C6  EFE9  F004         	goto	u1320
  1046   0009CA                     u1321:
  1047   0009CA  6A3D               	clrf	??_main^0,c
  1048   0009CC  2A3D               	incf	??_main^0,f,c
  1049   0009CE  EFEA  F004         	goto	u1338
  1050   0009D2                     u1320:
  1051   0009D2  6A3D               	clrf	??_main^0,c
  1052   0009D4                     u1338:
  1053   0009D4  463D               	rlncf	??_main^0,f,c
  1054   0009D6  463D               	rlncf	??_main^0,f,c
  1055   0009D8  508C               	movf	140,w,c	;volatile
  1056   0009DA  183D               	xorwf	??_main^0,w,c
  1057   0009DC  0BFB               	andlw	-5
  1058   0009DE  183D               	xorwf	??_main^0,w,c
  1059   0009E0  6E8C               	movwf	140,c	;volatile
  1060                           
  1061                           ;main.c: 115:         Escreve_LCD("                ");
  1062   0009E2  A283               	btfss	131,1,c	;volatile
  1063   0009E4  EFF6  F004         	goto	u1341
  1064   0009E8  EFFA  F004         	goto	u1340
  1065   0009EC                     u1341:
  1066   0009EC  6A3D               	clrf	??_main^0,c
  1067   0009EE  2A3D               	incf	??_main^0,f,c
  1068   0009F0  EFFB  F004         	goto	u1358
  1069   0009F4                     u1340:
  1070   0009F4  6A3D               	clrf	??_main^0,c
  1071   0009F6                     u1358:
  1072   0009F6  463D               	rlncf	??_main^0,f,c
  1073   0009F8  508C               	movf	140,w,c	;volatile
  1074   0009FA  183D               	xorwf	??_main^0,w,c
  1075   0009FC  0BFD               	andlw	-3
  1076   0009FE  183D               	xorwf	??_main^0,w,c
  1077   000A00  6E8C               	movwf	140,c	;volatile
  1078                           
  1079                           ;main.c: 116: 
  1080   000A02  A083               	btfss	131,0,c	;volatile
  1081   000A04  EF06  F005         	goto	u1361
  1082   000A08  EF0A  F005         	goto	u1360
  1083   000A0C                     u1361:
  1084   000A0C  6A3D               	clrf	??_main^0,c
  1085   000A0E  2A3D               	incf	??_main^0,f,c
  1086   000A10  EF0B  F005         	goto	u1378
  1087   000A14                     u1360:
  1088   000A14  6A3D               	clrf	??_main^0,c
  1089   000A16                     u1378:
  1090   000A16  508C               	movf	140,w,c	;volatile
  1091   000A18  183D               	xorwf	??_main^0,w,c
  1092   000A1A  0BFE               	andlw	-2
  1093   000A1C  183D               	xorwf	??_main^0,w,c
  1094   000A1E  6E8C               	movwf	140,c	;volatile
  1095                           
  1096                           ;main.c: 117: 
  1097   000A20  A482               	btfss	130,2,c	;volatile
  1098   000A22  EF15  F005         	goto	u1381
  1099   000A26  EF19  F005         	goto	u1380
  1100   000A2A                     u1381:
  1101   000A2A  6A3D               	clrf	??_main^0,c
  1102   000A2C  2A3D               	incf	??_main^0,f,c
  1103   000A2E  EF1A  F005         	goto	u1398
  1104   000A32                     u1380:
  1105   000A32  6A3D               	clrf	??_main^0,c
  1106   000A34                     u1398:
  1107   000A34  463D               	rlncf	??_main^0,f,c
  1108   000A36  463D               	rlncf	??_main^0,f,c
  1109   000A38  508B               	movf	139,w,c	;volatile
  1110   000A3A  183D               	xorwf	??_main^0,w,c
  1111   000A3C  0BFB               	andlw	-5
  1112   000A3E  183D               	xorwf	??_main^0,w,c
  1113   000A40  6E8B               	movwf	139,c	;volatile
  1114   000A42                     
  1115                           ;main.c: 118:         Posiciona_LCD(1,1);
  1116   000A42  0E03               	movlw	3
  1117   000A44  6E3E               	movwf	(??_main+1)^0,c
  1118   000A46  0E8A               	movlw	138
  1119   000A48  6E3D               	movwf	??_main^0,c
  1120   000A4A  0E56               	movlw	86
  1121   000A4C                     u1437:
  1122   000A4C  2EE8               	decfsz	wreg,f,c
  1123   000A4E  D7FE               	bra	u1437
  1124   000A50  2E3D               	decfsz	??_main^0,f,c
  1125   000A52  D7FC               	bra	u1437
  1126   000A54  2E3E               	decfsz	(??_main+1)^0,f,c
  1127   000A56  D7FA               	bra	u1437
  1128                           
  1129                           ;main.c: 120:         Escreve_LCD(lcd_buffer);
  1130   000A58  EF38  F005         	goto	l1703
  1131   000A5C                     l104:
  1132                           
  1133                           ;main.c: 122: 
  1134   000A5C  9282               	bcf	130,1,c	;volatile
  1135                           
  1136                           ;main.c: 123:         Posiciona_LCD(2,1);
  1137   000A5E  9E95               	bcf	149,7,c	;volatile
  1138                           
  1139                           ;main.c: 124:         if (adc_value > 600) {
  1140   000A60  9C95               	bcf	149,6,c	;volatile
  1141                           
  1142                           ;main.c: 125:             Escreve_LCD("Alerta: Gas!");
  1143   000A62  9A95               	bcf	149,5,c	;volatile
  1144                           
  1145                           ;main.c: 126:         } else if (adc_value > 300) {
  1146   000A64  9895               	bcf	149,4,c	;volatile
  1147                           
  1148                           ;main.c: 127:             Escreve_LCD("Gas Detectado");
  1149   000A66  9695               	bcf	149,3,c	;volatile
  1150                           
  1151                           ;main.c: 128:             alarme_ativo = 1;
  1152   000A68  9495               	bcf	149,2,c	;volatile
  1153                           
  1154                           ;main.c: 129:         }
  1155   000A6A  9295               	bcf	149,1,c	;volatile
  1156                           
  1157                           ;main.c: 130:         else {
  1158   000A6C  9095               	bcf	149,0,c	;volatile
  1159                           
  1160                           ;main.c: 131:             Escreve_LCD("Ar Puro");
  1161   000A6E  9494               	bcf	148,2,c	;volatile
  1162   000A70                     l1703:
  1163                           
  1164                           ;main.c: 135:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1165   000A70  EC21  F00A         	call	_read_adc	;wreg free
  1166   000A74  C001  F050         	movff	?_read_adc,main@adc_value
  1167   000A78  C002  F051         	movff	?_read_adc+1,main@adc_value+1
  1168   000A7C  0E01               	movlw	1
  1169   000A7E  6E03               	movwf	Posiciona_LCD@coluna^0,c
  1170   000A80  0E02               	movlw	2
  1171   000A82  ECAA  F008         	call	_Posiciona_LCD
  1172   000A86  0E01               	movlw	low STR_4
  1173   000A88  6E03               	movwf	Escreve_LCD@caracter^0,c
  1174   000A8A  5003               	movf	Escreve_LCD@caracter^0,w,c
  1175   000A8C  A4D8               	btfss	status,2,c
  1176   000A8E  0E08               	movlw	high __smallconst
  1177   000A90  6E04               	movwf	(Escreve_LCD@caracter+1)^0,c
  1178   000A92  ECE2  F008         	call	_Escreve_LCD	;wreg free
  1179   000A96  0E01               	movlw	1
  1180   000A98  6E03               	movwf	Posiciona_LCD@coluna^0,c
  1181   000A9A  0E01               	movlw	1
  1182   000A9C  ECAA  F008         	call	_Posiciona_LCD
  1183   000AA0  0E3F               	movlw	low main@lcd_buffer
  1184   000AA2  6E2D               	movwf	sprintf@s^0,c
  1185   000AA4  0E46               	movlw	low STR_5
  1186   000AA6  6E2E               	movwf	sprintf@fmt^0,c
  1187   000AA8  C050  F02F         	movff	main@adc_value,?_sprintf+2
  1188   000AAC  C051  F030         	movff	main@adc_value+1,?_sprintf+3
  1189   000AB0  ECC1  F009         	call	_sprintf	;wreg free
  1190   000AB4  0E3F               	movlw	low main@lcd_buffer
  1191   000AB6  6E03               	movwf	Escreve_LCD@caracter^0,c
  1192   000AB8  6A04               	clrf	(Escreve_LCD@caracter+1)^0,c
  1193   000ABA  ECE2  F008         	call	_Escreve_LCD	;wreg free
  1194   000ABE  0E01               	movlw	1
  1195   000AC0  6E03               	movwf	Posiciona_LCD@coluna^0,c
  1196   000AC2  0E02               	movlw	2
  1197   000AC4  ECAA  F008         	call	_Posiciona_LCD
  1198   000AC8  0E59               	movlw	89
  1199   000ACA  5C50               	subwf	main@adc_value^0,w,c
  1200   000ACC  0E02               	movlw	2
  1201   000ACE  5851               	subwfb	(main@adc_value+1)^0,w,c
  1202   000AD0  A0D8               	btfss	status,0,c
  1203   000AD2  EF6D  F005         	goto	u1401
  1204   000AD6  EF6F  F005         	goto	u1400
  1205   000ADA                     u1401:
  1206   000ADA  EF79  F005         	goto	l1719
  1207   000ADE                     u1400:
  1208   000ADE  0E20               	movlw	low STR_6
  1209   000AE0  6E03               	movwf	Escreve_LCD@caracter^0,c
  1210   000AE2  5003               	movf	Escreve_LCD@caracter^0,w,c
  1211   000AE4  A4D8               	btfss	status,2,c
  1212   000AE6  0E08               	movlw	high __smallconst
  1213   000AE8  6E04               	movwf	(Escreve_LCD@caracter+1)^0,c
  1214   000AEA  ECE2  F008         	call	_Escreve_LCD	;wreg free
  1215   000AEE  EF98  F005         	goto	l1727
  1216   000AF2                     l1719:
  1217   000AF2  0E2D               	movlw	45
  1218   000AF4  5C50               	subwf	main@adc_value^0,w,c
  1219   000AF6  0E01               	movlw	1
  1220   000AF8  5851               	subwfb	(main@adc_value+1)^0,w,c
  1221   000AFA  A0D8               	btfss	status,0,c
  1222   000AFC  EF82  F005         	goto	u1411
  1223   000B00  EF84  F005         	goto	u1410
  1224   000B04                     u1411:
  1225   000B04  EF90  F005         	goto	l1725
  1226   000B08                     u1410:
  1227   000B08  0E12               	movlw	low STR_7
  1228   000B0A  6E03               	movwf	Escreve_LCD@caracter^0,c
  1229   000B0C  5003               	movf	Escreve_LCD@caracter^0,w,c
  1230   000B0E  A4D8               	btfss	status,2,c
  1231   000B10  0E08               	movlw	high __smallconst
  1232   000B12  6E04               	movwf	(Escreve_LCD@caracter+1)^0,c
  1233   000B14  ECE2  F008         	call	_Escreve_LCD	;wreg free
  1234   000B18  0E01               	movlw	1
  1235   000B1A  6E58               	movwf	_alarme_ativo^0,c	;volatile
  1236   000B1C  EF98  F005         	goto	l1727
  1237   000B20                     l1725:
  1238   000B20  0E50               	movlw	low STR_8
  1239   000B22  6E03               	movwf	Escreve_LCD@caracter^0,c
  1240   000B24  5003               	movf	Escreve_LCD@caracter^0,w,c
  1241   000B26  A4D8               	btfss	status,2,c
  1242   000B28  0E08               	movlw	high __smallconst
  1243   000B2A  6E04               	movwf	(Escreve_LCD@caracter+1)^0,c
  1244   000B2C  ECE2  F008         	call	_Escreve_LCD	;wreg free
  1245   000B30                     l1727:
  1246   000B30  0E0D               	movlw	13
  1247   000B32  6E3E               	movwf	(??_main+1)^0,c
  1248   000B34  0EAF               	movlw	175
  1249   000B36  6E3D               	movwf	??_main^0,c
  1250   000B38  0EB6               	movlw	182
  1251   000B3A                     u1447:
  1252   000B3A  2EE8               	decfsz	wreg,f,c
  1253   000B3C  D7FE               	bra	u1447
  1254   000B3E  2E3D               	decfsz	??_main^0,f,c
  1255   000B40  D7FC               	bra	u1447
  1256   000B42  2E3E               	decfsz	(??_main+1)^0,f,c
  1257   000B44  D7FA               	bra	u1447
  1258   000B46  D000               	nop2	
  1259   000B48  EF72  F004         	goto	l1697
  1260   000B4C  EF07  F000         	goto	start
  1261   000B50                     __end_of_main:
  1262                           	callstack 0
  1263                           
  1264 ;; *************** function _sprintf *****************
  1265 ;; Defined at:
  1266 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_sprintf.c"
  1267 ;; Parameters:    Size  Location     Type
  1268 ;;  s               1   44[COMRAM] PTR unsigned char 
  1269 ;;		 -> main@lcd_buffer(17), 
  1270 ;;  fmt             1   45[COMRAM] PTR const unsigned char 
  1271 ;;		 -> STR_5(10), 
  1272 ;; Auto vars:     Size  Location     Type
  1273 ;;  f              11   49[COMRAM] struct _IO_FILE
  1274 ;;  ret             2    0        int 
  1275 ;;  ap              1   48[COMRAM] PTR void [1]
  1276 ;;		 -> ?_sprintf(2), 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  2   44[COMRAM] int 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1286 ;;      Params:         4       0       0       0       0       0       0       0       0
  1287 ;;      Locals:        12       0       0       0       0       0       0       0       0
  1288 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1289 ;;      Totals:        16       0       0       0       0       0       0       0       0
  1290 ;;Total ram usage:       16 bytes
  1291 ;; Hardware stack levels used: 1
  1292 ;; Hardware stack levels required when called: 8
  1293 ;; This function calls:
  1294 ;;		_vfprintf
  1295 ;; This function is called by:
  1296 ;;		_main
  1297 ;; This function uses a non-reentrant model
  1298 ;;
  1299                           
  1300                           	psect	text1
  1301   001382                     __ptext1:
  1302                           	callstack 0
  1303   001382                     _sprintf:
  1304                           	callstack 22
  1305   001382  0E2F               	movlw	low (?_sprintf+2)
  1306   001384  6E31               	movwf	sprintf@ap^0,c
  1307   001386  C02D  F032         	movff	sprintf@s,sprintf@f
  1308   00138A  0E00               	movlw	0
  1309   00138C  6E35               	movwf	(sprintf@f+3)^0,c
  1310   00138E  0E00               	movlw	0
  1311   001390  6E34               	movwf	(sprintf@f+2)^0,c
  1312   001392  0E00               	movlw	0
  1313   001394  6E3C               	movwf	(sprintf@f+10)^0,c
  1314   001396  0E00               	movlw	0
  1315   001398  6E3B               	movwf	(sprintf@f+9)^0,c
  1316   00139A  0E32               	movlw	low sprintf@f
  1317   00139C  6E29               	movwf	vfprintf@fp^0,c
  1318   00139E  C02E  F02A         	movff	sprintf@fmt,vfprintf@fmt
  1319   0013A2  0E31               	movlw	low sprintf@ap
  1320   0013A4  6E2B               	movwf	vfprintf@ap^0,c
  1321   0013A6  EC65  F009         	call	_vfprintf	;wreg free
  1322   0013AA  502D               	movf	sprintf@s^0,w,c
  1323   0013AC  2434               	addwf	(sprintf@f+2)^0,w,c
  1324   0013AE  6ED9               	movwf	fsr2l,c
  1325   0013B0  6ADA               	clrf	fsr2h,c
  1326   0013B2  6ADF               	clrf	indf2,c
  1327   0013B4  0012               	return		;funcret
  1328   0013B6                     __end_of_sprintf:
  1329                           	callstack 0
  1330                           
  1331 ;; *************** function _vfprintf *****************
  1332 ;; Defined at:
  1333 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  fp              1   40[COMRAM] PTR struct _IO_FILE
  1336 ;;		 -> sprintf@f(11), 
  1337 ;;  fmt             1   41[COMRAM] PTR const unsigned char 
  1338 ;;		 -> STR_5(10), 
  1339 ;;  ap              1   42[COMRAM] PTR PTR void 
  1340 ;;		 -> sprintf@ap(1), 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  cfmt            1   43[COMRAM] PTR unsigned char 
  1343 ;;		 -> STR_5(10), 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2   40[COMRAM] int 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1353 ;;      Params:         3       0       0       0       0       0       0       0       0
  1354 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1355 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1356 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1357 ;;Total ram usage:        4 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 7
  1360 ;; This function calls:
  1361 ;;		_vfpfcnvrt
  1362 ;; This function is called by:
  1363 ;;		_sprintf
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           	psect	text2
  1368   0012CA                     __ptext2:
  1369                           	callstack 0
  1370   0012CA                     _vfprintf:
  1371                           	callstack 22
  1372   0012CA                     
  1373                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  1374   0012CA  C02A  F02C         	movff	vfprintf@fmt,vfprintf@cfmt
  1375                           
  1376                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1377   0012CE  EF71  F009         	goto	l1577
  1378   0012D2                     l1575:
  1379                           
  1380                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  1381   0012D2  C029  F020         	movff	vfprintf@fp,vfpfcnvrt@fp
  1382   0012D6  0E2C               	movlw	low vfprintf@cfmt
  1383   0012D8  6E21               	movwf	vfpfcnvrt@fmt^0,c
  1384   0012DA  C02B  F022         	movff	vfprintf@ap,vfpfcnvrt@ap
  1385   0012DE  EC5A  F006         	call	_vfpfcnvrt	;wreg free
  1386   0012E2                     l1577:
  1387                           
  1388                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  1389   0012E2  C02C  FFF6         	movff	vfprintf@cfmt,tblptrl
  1390   0012E6                     	if	1	;There is more than 1 active tblptr byte
  1391   0012E6  0E08               	movlw	high __smallconst
  1392   0012E8  6EF7               	movwf	tblptrh,c
  1393   0012EA                     	endif
  1394   0012EA                     	if	0	;tblptru may be non-zero
  1395   0012EA                     	endif
  1396   0012EA                     	if	0	;tblptru may be non-zero
  1397   0012EA                     	endif
  1398   0012EA  0008               	tblrd		*
  1399   0012EC  50F5               	movf	tablat,w,c
  1400   0012EE  0900               	iorlw	0
  1401   0012F0  A4D8               	btfss	status,2,c
  1402   0012F2  EF7D  F009         	goto	u1121
  1403   0012F6  EF7F  F009         	goto	u1120
  1404   0012FA                     u1121:
  1405   0012FA  EF69  F009         	goto	l1575
  1406   0012FE                     u1120:
  1407   0012FE                     
  1408                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  1409   0012FE  0E00               	movlw	0
  1410   001300  6E2A               	movwf	(?_vfprintf+1)^0,c
  1411   001302  0E00               	movlw	0
  1412   001304  6E29               	movwf	?_vfprintf^0,c
  1413   001306  0012               	return		;funcret
  1414   001308                     __end_of_vfprintf:
  1415                           	callstack 0
  1416                           
  1417 ;; *************** function _vfpfcnvrt *****************
  1418 ;; Defined at:
  1419 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;  fp              1   31[COMRAM] PTR struct _IO_FILE
  1422 ;;		 -> sprintf@f(11), 
  1423 ;;  fmt             1   32[COMRAM] PTR PTR unsigned char 
  1424 ;;		 -> vfprintf@cfmt(1), 
  1425 ;;  ap              1   33[COMRAM] PTR PTR void 
  1426 ;;		 -> sprintf@ap(1), 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  convarg         4   34[COMRAM] struct .
  1429 ;;  cp              1   39[COMRAM] PTR unsigned char 
  1430 ;;		 -> STR_5(10), 
  1431 ;;  done            1   38[COMRAM] _Bool 
  1432 ;;  c               1    0        unsigned char 
  1433 ;; Return value:  Size  Location     Type
  1434 ;;                  1    wreg      void 
  1435 ;; Registers used:
  1436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1437 ;; Tracked objects:
  1438 ;;		On entry : 0/0
  1439 ;;		On exit  : 0/0
  1440 ;;		Unchanged: 0/0
  1441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1442 ;;      Params:         3       0       0       0       0       0       0       0       0
  1443 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1444 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1445 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1446 ;;Total ram usage:        9 bytes
  1447 ;; Hardware stack levels used: 1
  1448 ;; Hardware stack levels required when called: 6
  1449 ;; This function calls:
  1450 ;;		_dtoa
  1451 ;;		_fputc
  1452 ;;		_read_prec_or_width
  1453 ;; This function is called by:
  1454 ;;		_vfprintf
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           	psect	text3
  1459   000CB4                     __ptext3:
  1460                           	callstack 0
  1461   000CB4                     _vfpfcnvrt:
  1462                           	callstack 22
  1463   000CB4                     
  1464                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  1465   000CB4  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1466   000CB6  6ED9               	movwf	fsr2l,c
  1467   000CB8  6ADA               	clrf	fsr2h,c
  1468   000CBA  CFDF FFF6          	movff	indf2,tblptrl
  1469   000CBE                     	if	1	;There is more than 1 active tblptr byte
  1470   000CBE  0E08               	movlw	high __smallconst
  1471   000CC0  6EF7               	movwf	tblptrh,c
  1472   000CC2                     	endif
  1473   000CC2                     	if	0	;tblptru may be non-zero
  1474   000CC2                     	endif
  1475   000CC2                     	if	0	;tblptru may be non-zero
  1476   000CC2                     	endif
  1477   000CC2  0008               	tblrd		*
  1478   000CC4  50F5               	movf	tablat,w,c
  1479   000CC6  0A25               	xorlw	37
  1480   000CC8  A4D8               	btfss	status,2,c
  1481   000CCA  EF69  F006         	goto	u1071
  1482   000CCE  EF6B  F006         	goto	u1070
  1483   000CD2                     u1071:
  1484   000CD2  EFF4  F006         	goto	l1555
  1485   000CD6                     u1070:
  1486   000CD6                     
  1487                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  1488   000CD6  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1489   000CD8  6ED9               	movwf	fsr2l,c
  1490   000CDA  6ADA               	clrf	fsr2h,c
  1491   000CDC  2ADF               	incf	indf2,f,c
  1492   000CDE                     
  1493                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  1494   000CDE  0E00               	movlw	0
  1495   000CE0  6E53               	movwf	(_width+1)^0,c
  1496   000CE2  0E00               	movlw	0
  1497   000CE4  6E52               	movwf	_width^0,c
  1498   000CE6  C052  F056         	movff	_width,_flags
  1499   000CEA                     
  1500                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  1501   000CEA  6854               	setf	_prec^0,c
  1502   000CEC  6855               	setf	(_prec+1)^0,c
  1503   000CEE                     
  1504                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1209:         don
      +                          e = 0;
  1505   000CEE  6A27               	clrf	vfpfcnvrt@done^0,c
  1506                           
  1507                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1508   000CF0  EF94  F006         	goto	l1529
  1509   000CF4                     l1519:
  1510                           
  1511                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1220:            
      +                                   flags |= (1 << 1);
  1512   000CF4  8256               	bsf	_flags^0,1,c
  1513   000CF6                     
  1514                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1221:            
      +                                   ++*fmt;
  1515   000CF6  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1516   000CF8  6ED9               	movwf	fsr2l,c
  1517   000CFA  6ADA               	clrf	fsr2h,c
  1518   000CFC  2ADF               	incf	indf2,f,c
  1519                           
  1520                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1222:            
      +                                   break;
  1521   000CFE  EF94  F006         	goto	l1529
  1522   000D02                     l1523:
  1523                           
  1524                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1243:            
      +                                   done = 1;
  1525   000D02  0E01               	movlw	1
  1526   000D04  6E27               	movwf	vfpfcnvrt@done^0,c
  1527                           
  1528                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1244:            
      +                                   break;
  1529   000D06  EF94  F006         	goto	l1529
  1530   000D0A                     l1527:
  1531   000D0A  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1532   000D0C  6ED9               	movwf	fsr2l,c
  1533   000D0E  6ADA               	clrf	fsr2h,c
  1534   000D10  CFDF FFF6          	movff	indf2,tblptrl
  1535   000D14                     	if	1	;There is more than 1 active tblptr byte
  1536   000D14  0E08               	movlw	high __smallconst
  1537   000D16  6EF7               	movwf	tblptrh,c
  1538   000D18                     	endif
  1539   000D18                     	if	0	;tblptru may be non-zero
  1540   000D18                     	endif
  1541   000D18                     	if	0	;tblptru may be non-zero
  1542   000D18                     	endif
  1543   000D18  0008               	tblrd		*
  1544   000D1A  50F5               	movf	tablat,w,c
  1545                           
  1546                           ; Switch size 1, requested type "simple"
  1547                           ; Number of cases is 1, Range of values is 48 to 48
  1548                           ; switch strategies available:
  1549                           ; Name         Instructions Cycles
  1550                           ; simple_byte            4     3 (average)
  1551                           ;	Chosen strategy is simple_byte
  1552   000D1C  0A30               	xorlw	48	; case 48
  1553   000D1E  B4D8               	btfsc	status,2,c
  1554   000D20  EF7A  F006         	goto	l1519
  1555   000D24  EF81  F006         	goto	l1523
  1556   000D28                     l1529:
  1557                           
  1558                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1210:         whi
      +                          le (!done) {
  1559   000D28  5027               	movf	vfpfcnvrt@done^0,w,c
  1560   000D2A  B4D8               	btfsc	status,2,c
  1561   000D2C  EF9A  F006         	goto	u1081
  1562   000D30  EF9C  F006         	goto	u1080
  1563   000D34                     u1081:
  1564   000D34  EF85  F006         	goto	l1527
  1565   000D38                     u1080:
  1566   000D38                     
  1567                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1256:   width = r
      +                          ead_prec_or_width(fmt, ap);
  1568   000D38  C021  F001         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  1569   000D3C  C022  F002         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  1570   000D40  EC13  F008         	call	_read_prec_or_width	;wreg free
  1571   000D44  C001  F052         	movff	?_read_prec_or_width,_width
  1572   000D48  C002  F053         	movff	?_read_prec_or_width+1,_width+1
  1573   000D4C                     
  1574                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1257:   if (width
      +                           < 0) {
  1575   000D4C  BE53               	btfsc	(_width+1)^0,7,c
  1576   000D4E  EFAD  F006         	goto	u1090
  1577   000D52  EFAB  F006         	goto	u1091
  1578   000D56                     u1091:
  1579   000D56  EFB2  F006         	goto	l1537
  1580   000D5A                     u1090:
  1581   000D5A                     
  1582                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1258:    flags |=
      +                           (1 << 0);
  1583   000D5A  8056               	bsf	_flags^0,0,c
  1584                           
  1585                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1259:    width = 
      +                          -width;
  1586   000D5C  6C52               	negf	_width^0,c
  1587   000D5E  1E53               	comf	(_width+1)^0,f,c
  1588   000D60  B0D8               	btfsc	status,0,c
  1589   000D62  2A53               	incf	(_width+1)^0,f,c
  1590   000D64                     l1537:
  1591                           
  1592                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  1593   000D64  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1594   000D66  6ED9               	movwf	fsr2l,c
  1595   000D68  6ADA               	clrf	fsr2h,c
  1596   000D6A  50DF               	movf	indf2,w,c
  1597   000D6C  6E28               	movwf	vfpfcnvrt@cp^0,c
  1598   000D6E                     
  1599                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  1600   000D6E  C028  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1601   000D72                     	if	1	;There is more than 1 active tblptr byte
  1602   000D72  0E08               	movlw	high __smallconst
  1603   000D74  6EF7               	movwf	tblptrh,c
  1604   000D76                     	endif
  1605   000D76                     	if	0	;tblptru may be non-zero
  1606   000D76                     	endif
  1607   000D76                     	if	0	;tblptru may be non-zero
  1608   000D76                     	endif
  1609   000D76  0008               	tblrd		*
  1610   000D78  50F5               	movf	tablat,w,c
  1611   000D7A  0A64               	xorlw	100
  1612   000D7C  B4D8               	btfsc	status,2,c
  1613   000D7E  EFC3  F006         	goto	u1101
  1614   000D82  EFC5  F006         	goto	u1100
  1615   000D86                     u1101:
  1616   000D86  EFD3  F006         	goto	l1543
  1617   000D8A                     u1100:
  1618   000D8A  C028  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  1619   000D8E                     	if	1	;There is more than 1 active tblptr byte
  1620   000D8E  0E08               	movlw	high __smallconst
  1621   000D90  6EF7               	movwf	tblptrh,c
  1622   000D92                     	endif
  1623   000D92                     	if	0	;tblptru may be non-zero
  1624   000D92                     	endif
  1625   000D92                     	if	0	;tblptru may be non-zero
  1626   000D92                     	endif
  1627   000D92  0008               	tblrd		*
  1628   000D94  50F5               	movf	tablat,w,c
  1629   000D96  0A69               	xorlw	105
  1630   000D98  A4D8               	btfss	status,2,c
  1631   000D9A  EFD1  F006         	goto	u1111
  1632   000D9E  EFD3  F006         	goto	u1110
  1633   000DA2                     u1111:
  1634   000DA2  EFEE  F006         	goto	l1551
  1635   000DA6                     u1110:
  1636   000DA6                     l1543:
  1637                           
  1638                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  1639   000DA6  5022               	movf	vfpfcnvrt@ap^0,w,c
  1640   000DA8  6ED9               	movwf	fsr2l,c
  1641   000DAA  6ADA               	clrf	fsr2h,c
  1642   000DAC  0E02               	movlw	2
  1643   000DAE  26DF               	addwf	indf2,f,c
  1644   000DB0  5CDF               	subwf	indf2,w,c
  1645   000DB2  6ED9               	movwf	fsr2l,c
  1646   000DB4  6ADA               	clrf	fsr2h,c
  1647   000DB6  CFDE F023          	movff	postinc2,vfpfcnvrt@convarg
  1648   000DBA  CFDE F024          	movff	postinc2,vfpfcnvrt@convarg+1
  1649   000DBE                     
  1650                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  1651   000DBE  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1652   000DC0  6ED9               	movwf	fsr2l,c
  1653   000DC2  6ADA               	clrf	fsr2h,c
  1654   000DC4  2828               	incf	vfpfcnvrt@cp^0,w,c
  1655   000DC6  6EDF               	movwf	indf2,c
  1656   000DC8                     
  1657                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  1658   000DC8  C020  F015         	movff	vfpfcnvrt@fp,dtoa@fp
  1659   000DCC  C023  F016         	movff	vfpfcnvrt@convarg,dtoa@d
  1660   000DD0  C024  F017         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  1661   000DD4  ECA8  F005         	call	_dtoa	;wreg free
  1662   000DD8  EF05  F007         	goto	l857
  1663   000DDC                     l1551:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  1666   000DDC  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1667   000DDE  6ED9               	movwf	fsr2l,c
  1668   000DE0  6ADA               	clrf	fsr2h,c
  1669   000DE2  2ADF               	incf	indf2,f,c
  1670   000DE4  EF05  F007         	goto	l857
  1671   000DE8                     l1555:
  1672                           
  1673                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  1674   000DE8  5021               	movf	vfpfcnvrt@fmt^0,w,c
  1675   000DEA  6ED9               	movwf	fsr2l,c
  1676   000DEC  6ADA               	clrf	fsr2h,c
  1677   000DEE  CFDF FFF6          	movff	indf2,tblptrl
  1678   000DF2                     	if	1	;There is more than 1 active tblptr byte
  1679   000DF2  0E08               	movlw	high __smallconst
  1680   000DF4  6EF7               	movwf	tblptrh,c
  1681   000DF6                     	endif
  1682   000DF6                     	if	0	;tblptru may be non-zero
  1683   000DF6                     	endif
  1684   000DF6                     	if	0	;tblptru may be non-zero
  1685   000DF6                     	endif
  1686   000DF6  0008               	tblrd		*
  1687   000DF8  50F5               	movf	tablat,w,c
  1688   000DFA  6E01               	movwf	fputc@c^0,c
  1689   000DFC  6A02               	clrf	(fputc@c+1)^0,c
  1690   000DFE  C020  F003         	movff	vfpfcnvrt@fp,fputc@fp
  1691   000E02  ECBE  F007         	call	_fputc	;wreg free
  1692   000E06  EFEE  F006         	goto	l1551
  1693   000E0A                     l857:
  1694   000E0A  0012               	return		;funcret
  1695   000E0C                     __end_of_vfpfcnvrt:
  1696                           	callstack 0
  1697                           
  1698 ;; *************** function _read_prec_or_width *****************
  1699 ;; Defined at:
  1700 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1701 ;; Parameters:    Size  Location     Type
  1702 ;;  fmt             1    0[COMRAM] PTR PTR const unsigned c
  1703 ;;		 -> vfprintf@cfmt(1), 
  1704 ;;  ap              1    1[COMRAM] PTR PTR void [1]
  1705 ;;		 -> sprintf@ap(1), 
  1706 ;; Auto vars:     Size  Location     Type
  1707 ;;  c               1    4[COMRAM] unsigned char 
  1708 ;;  n               2    5[COMRAM] int 
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  2    0[COMRAM] int 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  1713 ;; Tracked objects:
  1714 ;;		On entry : 0/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1718 ;;      Params:         2       0       0       0       0       0       0       0       0
  1719 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1720 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1721 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1722 ;;Total ram usage:        7 bytes
  1723 ;; Hardware stack levels used: 1
  1724 ;; Hardware stack levels required when called: 1
  1725 ;; This function calls:
  1726 ;;		Nothing
  1727 ;; This function is called by:
  1728 ;;		_vfpfcnvrt
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732                           	psect	text4
  1733   001026                     __ptext4:
  1734                           	callstack 0
  1735   001026                     _read_prec_or_width:
  1736                           	callstack 26
  1737   001026                     
  1738                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  1739   001026  0E00               	movlw	0
  1740   001028  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  1741   00102A  0E00               	movlw	0
  1742   00102C  6E06               	movwf	read_prec_or_width@n^0,c
  1743   00102E                     
  1744                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  1745   00102E  5001               	movf	read_prec_or_width@fmt^0,w,c
  1746   001030  6ED9               	movwf	fsr2l,c
  1747   001032  6ADA               	clrf	fsr2h,c
  1748   001034  CFDF FFF6          	movff	indf2,tblptrl
  1749   001038                     	if	1	;There is more than 1 active tblptr byte
  1750   001038  0E08               	movlw	high __smallconst
  1751   00103A  6EF7               	movwf	tblptrh,c
  1752   00103C                     	endif
  1753   00103C                     	if	0	;tblptru may be non-zero
  1754   00103C                     	endif
  1755   00103C                     	if	0	;tblptru may be non-zero
  1756   00103C                     	endif
  1757   00103C  0008               	tblrd		*
  1758   00103E  50F5               	movf	tablat,w,c
  1759   001040  0A2A               	xorlw	42
  1760   001042  A4D8               	btfss	status,2,c
  1761   001044  EF26  F008         	goto	u1051
  1762   001048  EF28  F008         	goto	u1050
  1763   00104C                     u1051:
  1764   00104C  EF4D  F008         	goto	l1507
  1765   001050                     u1050:
  1766   001050                     
  1767                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  1768   001050  5001               	movf	read_prec_or_width@fmt^0,w,c
  1769   001052  6ED9               	movwf	fsr2l,c
  1770   001054  6ADA               	clrf	fsr2h,c
  1771   001056  2ADF               	incf	indf2,f,c
  1772   001058                     
  1773                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  1774   001058  5002               	movf	read_prec_or_width@ap^0,w,c
  1775   00105A  6ED9               	movwf	fsr2l,c
  1776   00105C  6ADA               	clrf	fsr2h,c
  1777   00105E  0E02               	movlw	2
  1778   001060  26DF               	addwf	indf2,f,c
  1779   001062  5CDF               	subwf	indf2,w,c
  1780   001064  6ED9               	movwf	fsr2l,c
  1781   001066  6ADA               	clrf	fsr2h,c
  1782   001068  CFDE F006          	movff	postinc2,read_prec_or_width@n
  1783   00106C  CFDE F007          	movff	postinc2,read_prec_or_width@n+1
  1784                           
  1785                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  1786   001070  EF60  F008         	goto	l838
  1787   001074                     l1503:
  1788                           
  1789                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  1790   001074  0E0A               	movlw	10
  1791   001076  0206               	mulwf	read_prec_or_width@n^0,c
  1792   001078  CFF3 F003          	movff	prodl,??_read_prec_or_width
  1793   00107C  CFF4 F004          	movff	prodh,??_read_prec_or_width+1
  1794   001080  0207               	mulwf	(read_prec_or_width@n+1)^0,c
  1795   001082  50F3               	movf	prodl,w,c
  1796   001084  2604               	addwf	(??_read_prec_or_width+1)^0,f,c
  1797   001086  5005               	movf	read_prec_or_width@c^0,w,c
  1798   001088  2403               	addwf	??_read_prec_or_width^0,w,c
  1799   00108A  6E06               	movwf	read_prec_or_width@n^0,c
  1800   00108C  0E00               	movlw	0
  1801   00108E  2004               	addwfc	(??_read_prec_or_width+1)^0,w,c
  1802   001090  6E07               	movwf	(read_prec_or_width@n+1)^0,c
  1803   001092                     
  1804                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  1805   001092  5001               	movf	read_prec_or_width@fmt^0,w,c
  1806   001094  6ED9               	movwf	fsr2l,c
  1807   001096  6ADA               	clrf	fsr2h,c
  1808   001098  2ADF               	incf	indf2,f,c
  1809   00109A                     l1507:
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  1812   00109A  5001               	movf	read_prec_or_width@fmt^0,w,c
  1813   00109C  6ED9               	movwf	fsr2l,c
  1814   00109E  6ADA               	clrf	fsr2h,c
  1815   0010A0  CFDF FFF6          	movff	indf2,tblptrl
  1816   0010A4                     	if	1	;There is more than 1 active tblptr byte
  1817   0010A4  0E08               	movlw	high __smallconst
  1818   0010A6  6EF7               	movwf	tblptrh,c
  1819   0010A8                     	endif
  1820   0010A8                     	if	0	;tblptru may be non-zero
  1821   0010A8                     	endif
  1822   0010A8                     	if	0	;tblptru may be non-zero
  1823   0010A8                     	endif
  1824   0010A8  0008               	tblrd		*
  1825   0010AA  50F5               	movf	tablat,w,c
  1826   0010AC  0FD0               	addlw	208
  1827   0010AE  6E05               	movwf	read_prec_or_width@c^0,c
  1828   0010B0  0E09               	movlw	9
  1829   0010B2  6405               	cpfsgt	read_prec_or_width@c^0,c
  1830   0010B4  EF5E  F008         	goto	u1061
  1831   0010B8  EF60  F008         	goto	u1060
  1832   0010BC                     u1061:
  1833   0010BC  EF3A  F008         	goto	l1503
  1834   0010C0                     u1060:
  1835   0010C0                     l838:
  1836                           
  1837                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  1838   0010C0  C006  F001         	movff	read_prec_or_width@n,?_read_prec_or_width
  1839   0010C4  C007  F002         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  1840   0010C8  0012               	return		;funcret
  1841   0010CA                     __end_of_read_prec_or_width:
  1842                           	callstack 0
  1843                           
  1844 ;; *************** function _dtoa *****************
  1845 ;; Defined at:
  1846 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  1847 ;; Parameters:    Size  Location     Type
  1848 ;;  fp              1   20[COMRAM] PTR struct _IO_FILE
  1849 ;;		 -> sprintf@f(11), 
  1850 ;;  d               2   21[COMRAM] int 
  1851 ;; Auto vars:     Size  Location     Type
  1852 ;;  i               2   29[COMRAM] int 
  1853 ;;  w               2   26[COMRAM] int 
  1854 ;;  s               1   28[COMRAM] unsigned char 
  1855 ;;  p               1   25[COMRAM] _Bool 
  1856 ;; Return value:  Size  Location     Type
  1857 ;;                  1    wreg      void 
  1858 ;; Registers used:
  1859 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1860 ;; Tracked objects:
  1861 ;;		On entry : 0/0
  1862 ;;		On exit  : 0/0
  1863 ;;		Unchanged: 0/0
  1864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1865 ;;      Params:         3       0       0       0       0       0       0       0       0
  1866 ;;      Locals:         8       0       0       0       0       0       0       0       0
  1867 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1868 ;;      Totals:        11       0       0       0       0       0       0       0       0
  1869 ;;Total ram usage:       11 bytes
  1870 ;; Hardware stack levels used: 1
  1871 ;; Hardware stack levels required when called: 5
  1872 ;; This function calls:
  1873 ;;		___awdiv
  1874 ;;		___awmod
  1875 ;;		_abs
  1876 ;;		_pad
  1877 ;; This function is called by:
  1878 ;;		_vfpfcnvrt
  1879 ;; This function uses a non-reentrant model
  1880 ;;
  1881                           
  1882                           	psect	text5
  1883   000B50                     __ptext5:
  1884                           	callstack 0
  1885   000B50                     _dtoa:
  1886                           	callstack 22
  1887   000B50                     
  1888                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 52
      +                          0:  _Bool p = 1;
  1889   000B50  0E01               	movlw	1
  1890   000B52  6E1A               	movwf	dtoa@p^0,c
  1891   000B54                     
  1892                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 524:     s = d < 
      +                          0 ? 1 : 0;
  1893   000B54  BE17               	btfsc	(dtoa@d+1)^0,7,c
  1894   000B56  EFAF  F005         	goto	u951
  1895   000B5A  EFB2  F005         	goto	u950
  1896   000B5E                     u951:
  1897   000B5E  0E01               	movlw	1
  1898   000B60  EFB3  F005         	goto	u960
  1899   000B64                     u950:
  1900   000B64  0E00               	movlw	0
  1901   000B66                     u960:
  1902   000B66  6E1D               	movwf	dtoa@s^0,c
  1903   000B68                     
  1904                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  1905   000B68  C052  F01B         	movff	_width,dtoa@w
  1906   000B6C  C053  F01C         	movff	_width+1,dtoa@w+1
  1907   000B70                     
  1908                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 536:     if (s
  1909   000B70  501D               	movf	dtoa@s^0,w,c
  1910   000B72  B4D8               	btfsc	status,2,c
  1911   000B74  EFBE  F005         	goto	u971
  1912   000B78  EFC0  F005         	goto	u970
  1913   000B7C                     u971:
  1914   000B7C  EFD7  F005         	goto	l821
  1915   000B80                     u970:
  1916   000B80                     
  1917                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 541:         --w;
  1918   000B80  061B               	decf	dtoa@w^0,f,c
  1919   000B82  A0D8               	btfss	status,0,c
  1920   000B84  061C               	decf	(dtoa@w+1)^0,f,c
  1921   000B86                     
  1922                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  1923   000B86  501D               	movf	dtoa@s^0,w,c
  1924   000B88  A4D8               	btfss	status,2,c
  1925   000B8A  EFC9  F005         	goto	u981
  1926   000B8E  EFCB  F005         	goto	u980
  1927   000B92                     u981:
  1928   000B92  EFD1  F005         	goto	l1459
  1929   000B96                     u980:
  1930   000B96  0E00               	movlw	0
  1931   000B98  6E19               	movwf	(_dtoa$1262+1)^0,c
  1932   000B9A  0E2B               	movlw	43
  1933   000B9C  6E18               	movwf	_dtoa$1262^0,c
  1934   000B9E  EFD5  F005         	goto	l1461
  1935   000BA2                     l1459:
  1936   000BA2  0E00               	movlw	0
  1937   000BA4  6E19               	movwf	(_dtoa$1262+1)^0,c
  1938   000BA6  0E2D               	movlw	45
  1939   000BA8  6E18               	movwf	_dtoa$1262^0,c
  1940   000BAA                     l1461:
  1941   000BAA  C018  F01D         	movff	_dtoa$1262,dtoa@s
  1942   000BAE                     l821:
  1943                           
  1944                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  1945   000BAE  0E00               	movlw	0
  1946   000BB0  6E1F               	movwf	(dtoa@i+1)^0,c
  1947   000BB2  0E1F               	movlw	31
  1948   000BB4  6E1E               	movwf	dtoa@i^0,c
  1949   000BB6                     
  1950                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  1951   000BB6  0100               	movlb	0	; () banked
  1952   000BB8  6B7F               	clrf	(_dbuf+31)& (0+255),b
  1953                           
  1954                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  1955   000BBA  EF0B  F006         	goto	l1475
  1956   000BBE                     l1465:
  1957                           
  1958                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 564:         --i;
  1959   000BBE  061E               	decf	dtoa@i^0,f,c
  1960   000BC0  A0D8               	btfss	status,0,c
  1961   000BC2  061F               	decf	(dtoa@i+1)^0,f,c
  1962   000BC4                     
  1963                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  1964   000BC4  501E               	movf	dtoa@i^0,w,c
  1965   000BC6  0F60               	addlw	low _dbuf
  1966   000BC8  6ED9               	movwf	fsr2l,c
  1967   000BCA  6ADA               	clrf	fsr2h,c
  1968   000BCC  C016  F001         	movff	dtoa@d,___awmod@dividend
  1969   000BD0  C017  F002         	movff	dtoa@d+1,___awmod@dividend+1
  1970   000BD4  0E00               	movlw	0
  1971   000BD6  6E04               	movwf	(___awmod@divisor+1)^0,c
  1972   000BD8  0E0A               	movlw	10
  1973   000BDA  6E03               	movwf	___awmod@divisor^0,c
  1974   000BDC  EC67  F007         	call	___awmod	;wreg free
  1975   000BE0  C001  F007         	movff	?___awmod,abs@a
  1976   000BE4  C002  F008         	movff	?___awmod+1,abs@a+1
  1977   000BE8  ECDB  F009         	call	_abs	;wreg free
  1978   000BEC  5007               	movf	?_abs^0,w,c
  1979   000BEE  0F30               	addlw	48
  1980   000BF0  6EDF               	movwf	indf2,c
  1981   000BF2                     
  1982                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 569:   p = 0;
  1983   000BF2  6A1A               	clrf	dtoa@p^0,c
  1984   000BF4                     
  1985                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 571:         --w;
  1986   000BF4  061B               	decf	dtoa@w^0,f,c
  1987   000BF6  A0D8               	btfss	status,0,c
  1988   000BF8  061C               	decf	(dtoa@w+1)^0,f,c
  1989   000BFA                     
  1990                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  1991   000BFA  C016  F001         	movff	dtoa@d,___awdiv@dividend
  1992   000BFE  C017  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  1993   000C02  0E00               	movlw	0
  1994   000C04  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1995   000C06  0E0A               	movlw	10
  1996   000C08  6E03               	movwf	___awdiv@divisor^0,c
  1997   000C0A  EC06  F007         	call	___awdiv	;wreg free
  1998   000C0E  C001  F016         	movff	?___awdiv,dtoa@d
  1999   000C12  C002  F017         	movff	?___awdiv+1,dtoa@d+1
  2000   000C16                     l1475:
  2001                           
  2002                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  2003   000C16  BE1F               	btfsc	(dtoa@i+1)^0,7,c
  2004   000C18  EF16  F006         	goto	u991
  2005   000C1C  501F               	movf	(dtoa@i+1)^0,w,c
  2006   000C1E  E108               	bnz	u990
  2007   000C20  041E               	decf	dtoa@i^0,w,c
  2008   000C22  A0D8               	btfss	status,0,c
  2009   000C24  EF16  F006         	goto	u991
  2010   000C28  EF18  F006         	goto	u990
  2011   000C2C                     u991:
  2012   000C2C  EF3D  F006         	goto	l1485
  2013   000C30                     u990:
  2014   000C30  5016               	movf	dtoa@d^0,w,c
  2015   000C32  1017               	iorwf	(dtoa@d+1)^0,w,c
  2016   000C34  A4D8               	btfss	status,2,c
  2017   000C36  EF1F  F006         	goto	u1001
  2018   000C3A  EF21  F006         	goto	u1000
  2019   000C3E                     u1001:
  2020   000C3E  EFDF  F005         	goto	l1465
  2021   000C42                     u1000:
  2022   000C42  501A               	movf	dtoa@p^0,w,c
  2023   000C44  A4D8               	btfss	status,2,c
  2024   000C46  EF27  F006         	goto	u1011
  2025   000C4A  EF29  F006         	goto	u1010
  2026   000C4E                     u1011:
  2027   000C4E  EFDF  F005         	goto	l1465
  2028   000C52                     u1010:
  2029   000C52  BE1C               	btfsc	(dtoa@w+1)^0,7,c
  2030   000C54  EF34  F006         	goto	u1021
  2031   000C58  501C               	movf	(dtoa@w+1)^0,w,c
  2032   000C5A  E108               	bnz	u1020
  2033   000C5C  041B               	decf	dtoa@w^0,w,c
  2034   000C5E  A0D8               	btfss	status,0,c
  2035   000C60  EF34  F006         	goto	u1021
  2036   000C64  EF36  F006         	goto	u1020
  2037   000C68                     u1021:
  2038   000C68  EF3D  F006         	goto	l1485
  2039   000C6C                     u1020:
  2040   000C6C  B256               	btfsc	_flags^0,1,c
  2041   000C6E  EF3B  F006         	goto	u1031
  2042   000C72  EF3D  F006         	goto	u1030
  2043   000C76                     u1031:
  2044   000C76  EFDF  F005         	goto	l1465
  2045   000C7A                     u1030:
  2046   000C7A                     l1485:
  2047                           
  2048                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  2049   000C7A  501D               	movf	dtoa@s^0,w,c
  2050   000C7C  B4D8               	btfsc	status,2,c
  2051   000C7E  EF43  F006         	goto	u1041
  2052   000C82  EF45  F006         	goto	u1040
  2053   000C86                     u1041:
  2054   000C86  EF4E  F006         	goto	l1491
  2055   000C8A                     u1040:
  2056   000C8A                     
  2057                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 577:         --i;
  2058   000C8A  061E               	decf	dtoa@i^0,f,c
  2059   000C8C  A0D8               	btfss	status,0,c
  2060   000C8E  061F               	decf	(dtoa@i+1)^0,f,c
  2061   000C90                     
  2062                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  2063   000C90  501E               	movf	dtoa@i^0,w,c
  2064   000C92  0F60               	addlw	low _dbuf
  2065   000C94  6ED9               	movwf	fsr2l,c
  2066   000C96  6ADA               	clrf	fsr2h,c
  2067   000C98  C01D  FFDF         	movff	dtoa@s,indf2
  2068   000C9C                     l1491:
  2069                           
  2070                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  2071   000C9C  C015  F00E         	movff	dtoa@fp,pad@fp
  2072   000CA0  501E               	movf	dtoa@i^0,w,c
  2073   000CA2  0F60               	addlw	low _dbuf
  2074   000CA4  6E0F               	movwf	pad@buf^0,c
  2075   000CA6  C01B  F010         	movff	dtoa@w,pad@p
  2076   000CAA  C01C  F011         	movff	dtoa@w+1,pad@p+1
  2077   000CAE  EC65  F008         	call	_pad	;wreg free
  2078   000CB2  0012               	return		;funcret
  2079   000CB4                     __end_of_dtoa:
  2080                           	callstack 0
  2081                           
  2082 ;; *************** function _pad *****************
  2083 ;; Defined at:
  2084 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c"
  2085 ;; Parameters:    Size  Location     Type
  2086 ;;  fp              1   13[COMRAM] PTR struct _IO_FILE
  2087 ;;		 -> sprintf@f(11), 
  2088 ;;  buf             1   14[COMRAM] PTR unsigned char 
  2089 ;;		 -> dbuf(32), 
  2090 ;;  p               2   15[COMRAM] int 
  2091 ;; Auto vars:     Size  Location     Type
  2092 ;;  i               2   18[COMRAM] int 
  2093 ;; Return value:  Size  Location     Type
  2094 ;;                  1    wreg      void 
  2095 ;; Registers used:
  2096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2097 ;; Tracked objects:
  2098 ;;		On entry : 0/0
  2099 ;;		On exit  : 0/0
  2100 ;;		Unchanged: 0/0
  2101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2102 ;;      Params:         4       0       0       0       0       0       0       0       0
  2103 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2104 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2105 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2106 ;;Total ram usage:        7 bytes
  2107 ;; Hardware stack levels used: 1
  2108 ;; Hardware stack levels required when called: 4
  2109 ;; This function calls:
  2110 ;;		_fputc
  2111 ;;		_fputs
  2112 ;; This function is called by:
  2113 ;;		_dtoa
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           
  2117                           	psect	text6
  2118   0010CA                     __ptext6:
  2119                           	callstack 0
  2120   0010CA                     _pad:
  2121                           	callstack 22
  2122   0010CA                     
  2123                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c:
      +                           199:     if (flags & (1 << 0)) {
  2124   0010CA  A056               	btfss	_flags^0,0,c
  2125   0010CC  EF6A  F008         	goto	u901
  2126   0010D0  EF6C  F008         	goto	u900
  2127   0010D4                     u901:
  2128   0010D4  EF72  F008         	goto	l1429
  2129   0010D8                     u900:
  2130   0010D8                     
  2131                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 200:         fput
      +                          s((const char *)buf, fp);
  2132   0010D8  C00F  F009         	movff	pad@buf,fputs@s
  2133   0010DC  C00E  F00A         	movff	pad@fp,fputs@fp
  2134   0010E0  ECA3  F009         	call	_fputs	;wreg free
  2135   0010E4                     l1429:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 205:  if (p < 0) 
      +                          {
  2138   0010E4  BE11               	btfsc	(pad@p+1)^0,7,c
  2139   0010E6  EF79  F008         	goto	u910
  2140   0010EA  EF77  F008         	goto	u911
  2141   0010EE                     u911:
  2142   0010EE  EF7D  F008         	goto	l813
  2143   0010F2                     u910:
  2144   0010F2                     
  2145                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  2146   0010F2  0E00               	movlw	0
  2147   0010F4  6E11               	movwf	(pad@p+1)^0,c
  2148   0010F6  0E00               	movlw	0
  2149   0010F8  6E10               	movwf	pad@p^0,c
  2150   0010FA                     l813:
  2151                           
  2152                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  2153   0010FA  0E00               	movlw	0
  2154   0010FC  6E14               	movwf	(pad@i+1)^0,c
  2155   0010FE  0E00               	movlw	0
  2156   001100  6E13               	movwf	pad@i^0,c
  2157                           
  2158                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2159   001102  EF8D  F008         	goto	l1437
  2160   001106                     l1433:
  2161                           
  2162                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  2163   001106  0E00               	movlw	0
  2164   001108  6E02               	movwf	(fputc@c+1)^0,c
  2165   00110A  0E20               	movlw	32
  2166   00110C  6E01               	movwf	fputc@c^0,c
  2167   00110E  C00E  F003         	movff	pad@fp,fputc@fp
  2168   001112  ECBE  F007         	call	_fputc	;wreg free
  2169   001116                     
  2170                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 211:         ++i;
  2171   001116  4A13               	infsnz	pad@i^0,f,c
  2172   001118  2A14               	incf	(pad@i+1)^0,f,c
  2173   00111A                     l1437:
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  2176   00111A  5010               	movf	pad@p^0,w,c
  2177   00111C  5C13               	subwf	pad@i^0,w,c
  2178   00111E  5014               	movf	(pad@i+1)^0,w,c
  2179   001120  0A80               	xorlw	128
  2180   001122  6E12               	movwf	??_pad^0,c
  2181   001124  5011               	movf	(pad@p+1)^0,w,c
  2182   001126  0A80               	xorlw	128
  2183   001128  5812               	subwfb	??_pad^0,w,c
  2184   00112A  A0D8               	btfss	status,0,c
  2185   00112C  EF9A  F008         	goto	u921
  2186   001130  EF9C  F008         	goto	u920
  2187   001134                     u921:
  2188   001134  EF83  F008         	goto	l1433
  2189   001138                     u920:
  2190   001138                     
  2191                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 216:     if (!(fl
      +                          ags & (1 << 0))) {
  2192   001138  B056               	btfsc	_flags^0,0,c
  2193   00113A  EFA1  F008         	goto	u931
  2194   00113E  EFA3  F008         	goto	u930
  2195   001142                     u931:
  2196   001142  EFA9  F008         	goto	l818
  2197   001146                     u930:
  2198   001146                     
  2199                           ;C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  2200   001146  C00F  F009         	movff	pad@buf,fputs@s
  2201   00114A  C00E  F00A         	movff	pad@fp,fputs@fp
  2202   00114E  ECA3  F009         	call	_fputs	;wreg free
  2203   001152                     l818:
  2204   001152  0012               	return		;funcret
  2205   001154                     __end_of_pad:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function _fputs *****************
  2209 ;; Defined at:
  2210 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputs.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  s               1    8[COMRAM] PTR const unsigned char 
  2213 ;;		 -> dbuf(32), 
  2214 ;;  fp              1    9[COMRAM] PTR struct _IO_FILE
  2215 ;;		 -> sprintf@f(11), 
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;  i               2   11[COMRAM] int 
  2218 ;;  c               1   10[COMRAM] unsigned char 
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  2    8[COMRAM] int 
  2221 ;; Registers used:
  2222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2228 ;;      Params:         2       0       0       0       0       0       0       0       0
  2229 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2231 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2232 ;;Total ram usage:        5 bytes
  2233 ;; Hardware stack levels used: 1
  2234 ;; Hardware stack levels required when called: 3
  2235 ;; This function calls:
  2236 ;;		_fputc
  2237 ;; This function is called by:
  2238 ;;		_pad
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text7
  2243   001346                     __ptext7:
  2244                           	callstack 0
  2245   001346                     _fputs:
  2246                           	callstack 22
  2247   001346  0E00               	movlw	0
  2248   001348  6E0D               	movwf	(fputs@i+1)^0,c
  2249   00134A  0E00               	movlw	0
  2250   00134C  6E0C               	movwf	fputs@i^0,c
  2251   00134E  EFB2  F009         	goto	l1343
  2252   001352                     l1339:
  2253   001352  C00B  F001         	movff	fputs@c,fputc@c
  2254   001356  6A02               	clrf	(fputc@c+1)^0,c
  2255   001358  C00A  F003         	movff	fputs@fp,fputc@fp
  2256   00135C  ECBE  F007         	call	_fputc	;wreg free
  2257   001360  4A0C               	infsnz	fputs@i^0,f,c
  2258   001362  2A0D               	incf	(fputs@i+1)^0,f,c
  2259   001364                     l1343:
  2260   001364  5009               	movf	fputs@s^0,w,c
  2261   001366  240C               	addwf	fputs@i^0,w,c
  2262   001368  6ED9               	movwf	fsr2l,c
  2263   00136A  6ADA               	clrf	fsr2h,c
  2264   00136C  50DF               	movf	indf2,w,c
  2265   00136E  6E0B               	movwf	fputs@c^0,c
  2266   001370  500B               	movf	fputs@c^0,w,c
  2267   001372  A4D8               	btfss	status,2,c
  2268   001374  EFBE  F009         	goto	u771
  2269   001378  EFC0  F009         	goto	u770
  2270   00137C                     u771:
  2271   00137C  EFA9  F009         	goto	l1339
  2272   001380                     u770:
  2273   001380  0012               	return		;funcret
  2274   001382                     __end_of_fputs:
  2275                           	callstack 0
  2276                           
  2277 ;; *************** function _fputc *****************
  2278 ;; Defined at:
  2279 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\nf_fputc.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  c               2    0[COMRAM] int 
  2282 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  2283 ;;		 -> sprintf@f(11), 
  2284 ;; Auto vars:     Size  Location     Type
  2285 ;;		None
  2286 ;; Return value:  Size  Location     Type
  2287 ;;                  2    0[COMRAM] int 
  2288 ;; Registers used:
  2289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2290 ;; Tracked objects:
  2291 ;;		On entry : 0/0
  2292 ;;		On exit  : 0/0
  2293 ;;		Unchanged: 0/0
  2294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2295 ;;      Params:         3       0       0       0       0       0       0       0       0
  2296 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2297 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2298 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2299 ;;Total ram usage:        8 bytes
  2300 ;; Hardware stack levels used: 1
  2301 ;; Hardware stack levels required when called: 2
  2302 ;; This function calls:
  2303 ;;		_putch
  2304 ;; This function is called by:
  2305 ;;		_pad
  2306 ;;		_vfpfcnvrt
  2307 ;;		_fputs
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           	psect	text8
  2312   000F7C                     __ptext8:
  2313                           	callstack 0
  2314   000F7C                     _fputc:
  2315                           	callstack 25
  2316   000F7C  5003               	movf	fputc@fp^0,w,c
  2317   000F7E  B4D8               	btfsc	status,2,c
  2318   000F80  EFC4  F007         	goto	u731
  2319   000F84  EFC6  F007         	goto	u730
  2320   000F88                     u731:
  2321   000F88  EFCE  F007         	goto	l1327
  2322   000F8C                     u730:
  2323   000F8C  5003               	movf	fputc@fp^0,w,c
  2324   000F8E  A4D8               	btfss	status,2,c
  2325   000F90  EFCC  F007         	goto	u741
  2326   000F94  EFCE  F007         	goto	u740
  2327   000F98                     u741:
  2328   000F98  EFD3  F007         	goto	l1329
  2329   000F9C                     u740:
  2330   000F9C                     l1327:
  2331   000F9C  5001               	movf	fputc@c^0,w,c
  2332   000F9E  EC40  F00A         	call	_putch
  2333   000FA2  EF12  F008         	goto	l882
  2334   000FA6                     l1329:
  2335   000FA6  5003               	movf	fputc@fp^0,w,c
  2336   000FA8  6ED9               	movwf	fsr2l,c
  2337   000FAA  6ADA               	clrf	fsr2h,c
  2338   000FAC  0E09               	movlw	9
  2339   000FAE  26D9               	addwf	fsr2l,f,c
  2340   000FB0  50DE               	movf	postinc2,w,c
  2341   000FB2  10DE               	iorwf	postinc2,w,c
  2342   000FB4  B4D8               	btfsc	status,2,c
  2343   000FB6  EFDF  F007         	goto	u751
  2344   000FBA  EFE1  F007         	goto	u750
  2345   000FBE                     u751:
  2346   000FBE  EFFA  F007         	goto	l1333
  2347   000FC2                     u750:
  2348   000FC2  5003               	movf	fputc@fp^0,w,c
  2349   000FC4  6ED9               	movwf	fsr2l,c
  2350   000FC6  6ADA               	clrf	fsr2h,c
  2351   000FC8  0E09               	movlw	9
  2352   000FCA  26D9               	addwf	fsr2l,f,c
  2353   000FCC  5003               	movf	fputc@fp^0,w,c
  2354   000FCE  6EE1               	movwf	fsr1l,c
  2355   000FD0  6AE2               	clrf	fsr1h,c
  2356   000FD2  0E02               	movlw	2
  2357   000FD4  26E1               	addwf	fsr1l,f,c
  2358   000FD6  50DE               	movf	postinc2,w,c
  2359   000FD8  5CE6               	subwf	postinc1,w,c
  2360   000FDA  50E6               	movf	postinc1,w,c
  2361   000FDC  0A80               	xorlw	128
  2362   000FDE  6E08               	movwf	(??_fputc+4)^0,c
  2363   000FE0  50DE               	movf	postinc2,w,c
  2364   000FE2  0A80               	xorlw	128
  2365   000FE4  5808               	subwfb	(??_fputc+4)^0,w,c
  2366   000FE6  B0D8               	btfsc	status,0,c
  2367   000FE8  EFF8  F007         	goto	u761
  2368   000FEC  EFFA  F007         	goto	u760
  2369   000FF0                     u761:
  2370   000FF0  EF12  F008         	goto	l882
  2371   000FF4                     u760:
  2372   000FF4                     l1333:
  2373   000FF4  5003               	movf	fputc@fp^0,w,c
  2374   000FF6  6ED9               	movwf	fsr2l,c
  2375   000FF8  6ADA               	clrf	fsr2h,c
  2376   000FFA  0E02               	movlw	2
  2377   000FFC  26D9               	addwf	fsr2l,f,c
  2378   000FFE  50DF               	movf	indf2,w,c
  2379   001000  6E04               	movwf	??_fputc^0,c
  2380   001002  5003               	movf	fputc@fp^0,w,c
  2381   001004  6ED9               	movwf	fsr2l,c
  2382   001006  6ADA               	clrf	fsr2h,c
  2383   001008  50DF               	movf	indf2,w,c
  2384   00100A  2404               	addwf	??_fputc^0,w,c
  2385   00100C  6ED9               	movwf	fsr2l,c
  2386   00100E  6ADA               	clrf	fsr2h,c
  2387   001010  C001  FFDF         	movff	fputc@c,indf2
  2388   001014  5003               	movf	fputc@fp^0,w,c
  2389   001016  6ED9               	movwf	fsr2l,c
  2390   001018  6ADA               	clrf	fsr2h,c
  2391   00101A  0E02               	movlw	2
  2392   00101C  26D9               	addwf	fsr2l,f,c
  2393   00101E  2ADE               	incf	postinc2,f,c
  2394   001020  0E00               	movlw	0
  2395   001022  22DD               	addwfc	postdec2,f,c
  2396   001024                     l882:
  2397   001024  0012               	return		;funcret
  2398   001026                     __end_of_fputc:
  2399                           	callstack 0
  2400                           
  2401 ;; *************** function _putch *****************
  2402 ;; Defined at:
  2403 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\putch.c"
  2404 ;; Parameters:    Size  Location     Type
  2405 ;;  c               1    wreg     unsigned char 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  c               1    0[COMRAM] unsigned char 
  2408 ;; Return value:  Size  Location     Type
  2409 ;;                  1    wreg      void 
  2410 ;; Registers used:
  2411 ;;		wreg
  2412 ;; Tracked objects:
  2413 ;;		On entry : 0/0
  2414 ;;		On exit  : 0/0
  2415 ;;		Unchanged: 0/0
  2416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2417 ;;      Params:         0       0       0       0       0       0       0       0       0
  2418 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2419 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2420 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2421 ;;Total ram usage:        0 bytes
  2422 ;; Hardware stack levels used: 1
  2423 ;; Hardware stack levels required when called: 1
  2424 ;; This function calls:
  2425 ;;		Nothing
  2426 ;; This function is called by:
  2427 ;;		_fputc
  2428 ;; This function uses a non-reentrant model
  2429 ;;
  2430                           
  2431                           	psect	text9
  2432   001480                     __ptext9:
  2433                           	callstack 0
  2434   001480                     _putch:
  2435                           	callstack 25
  2436   001480  0012               	return		;funcret
  2437   001482                     __end_of_putch:
  2438                           	callstack 0
  2439                           
  2440 ;; *************** function _abs *****************
  2441 ;; Defined at:
  2442 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\abs.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  a               2    6[COMRAM] int 
  2445 ;; Auto vars:     Size  Location     Type
  2446 ;;		None
  2447 ;; Return value:  Size  Location     Type
  2448 ;;                  2    6[COMRAM] int 
  2449 ;; Registers used:
  2450 ;;		wreg, status,2, status,0
  2451 ;; Tracked objects:
  2452 ;;		On entry : 0/0
  2453 ;;		On exit  : 0/0
  2454 ;;		Unchanged: 0/0
  2455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2456 ;;      Params:         2       0       0       0       0       0       0       0       0
  2457 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2458 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2459 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2460 ;;Total ram usage:        4 bytes
  2461 ;; Hardware stack levels used: 1
  2462 ;; Hardware stack levels required when called: 1
  2463 ;; This function calls:
  2464 ;;		Nothing
  2465 ;; This function is called by:
  2466 ;;		_dtoa
  2467 ;; This function uses a non-reentrant model
  2468 ;;
  2469                           
  2470                           	psect	text10
  2471   0013B6                     __ptext10:
  2472                           	callstack 0
  2473   0013B6                     _abs:
  2474                           	callstack 25
  2475   0013B6  BE08               	btfsc	(abs@a+1)^0,7,c
  2476   0013B8  EFE0  F009         	goto	u941
  2477   0013BC  EFE2  F009         	goto	u940
  2478   0013C0                     u941:
  2479   0013C0  EFE8  F009         	goto	l867
  2480   0013C4                     u940:
  2481   0013C4  C007  F007         	movff	abs@a,?_abs
  2482   0013C8  C008  F008         	movff	abs@a+1,?_abs+1
  2483   0013CC  EFF4  F009         	goto	l870
  2484   0013D0                     l867:
  2485   0013D0  C007  F009         	movff	abs@a,??_abs
  2486   0013D4  C008  F00A         	movff	abs@a+1,??_abs+1
  2487   0013D8  1E09               	comf	??_abs^0,f,c
  2488   0013DA  1E0A               	comf	(??_abs+1)^0,f,c
  2489   0013DC  4A09               	infsnz	??_abs^0,f,c
  2490   0013DE  2A0A               	incf	(??_abs+1)^0,f,c
  2491   0013E0  C009  F007         	movff	??_abs,?_abs
  2492   0013E4  C00A  F008         	movff	??_abs+1,?_abs+1
  2493   0013E8                     l870:
  2494   0013E8  0012               	return		;funcret
  2495   0013EA                     __end_of_abs:
  2496                           	callstack 0
  2497                           
  2498 ;; *************** function ___awmod *****************
  2499 ;; Defined at:
  2500 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awmod.c"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  dividend        2    0[COMRAM] int 
  2503 ;;  divisor         2    2[COMRAM] int 
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;  sign            1    5[COMRAM] unsigned char 
  2506 ;;  counter         1    4[COMRAM] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;                  2    0[COMRAM] int 
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2516 ;;      Params:         4       0       0       0       0       0       0       0       0
  2517 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2518 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2519 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2520 ;;Total ram usage:        6 bytes
  2521 ;; Hardware stack levels used: 1
  2522 ;; Hardware stack levels required when called: 1
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_dtoa
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text11
  2531   000ECE                     __ptext11:
  2532                           	callstack 0
  2533   000ECE                     ___awmod:
  2534                           	callstack 25
  2535   000ECE  6A06               	clrf	___awmod@sign^0,c
  2536   000ED0  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  2537   000ED2  EF6F  F007         	goto	u840
  2538   000ED6  EF6D  F007         	goto	u841
  2539   000EDA                     u841:
  2540   000EDA  EF75  F007         	goto	l1397
  2541   000EDE                     u840:
  2542   000EDE  6C01               	negf	___awmod@dividend^0,c
  2543   000EE0  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2544   000EE2  B0D8               	btfsc	status,0,c
  2545   000EE4  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2546   000EE6  0E01               	movlw	1
  2547   000EE8  6E06               	movwf	___awmod@sign^0,c
  2548   000EEA                     l1397:
  2549   000EEA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  2550   000EEC  EF7C  F007         	goto	u850
  2551   000EF0  EF7A  F007         	goto	u851
  2552   000EF4                     u851:
  2553   000EF4  EF80  F007         	goto	l1401
  2554   000EF8                     u850:
  2555   000EF8  6C03               	negf	___awmod@divisor^0,c
  2556   000EFA  1E04               	comf	(___awmod@divisor+1)^0,f,c
  2557   000EFC  B0D8               	btfsc	status,0,c
  2558   000EFE  2A04               	incf	(___awmod@divisor+1)^0,f,c
  2559   000F00                     l1401:
  2560   000F00  5003               	movf	___awmod@divisor^0,w,c
  2561   000F02  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  2562   000F04  B4D8               	btfsc	status,2,c
  2563   000F06  EF87  F007         	goto	u861
  2564   000F0A  EF89  F007         	goto	u860
  2565   000F0E                     u861:
  2566   000F0E  EFAD  F007         	goto	l1417
  2567   000F12                     u860:
  2568   000F12  0E01               	movlw	1
  2569   000F14  6E05               	movwf	___awmod@counter^0,c
  2570   000F16  EF91  F007         	goto	l1407
  2571   000F1A                     l1405:
  2572   000F1A  90D8               	bcf	status,0,c
  2573   000F1C  3603               	rlcf	___awmod@divisor^0,f,c
  2574   000F1E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  2575   000F20  2A05               	incf	___awmod@counter^0,f,c
  2576   000F22                     l1407:
  2577   000F22  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  2578   000F24  EF96  F007         	goto	u871
  2579   000F28  EF98  F007         	goto	u870
  2580   000F2C                     u871:
  2581   000F2C  EF8D  F007         	goto	l1405
  2582   000F30                     u870:
  2583   000F30                     l1409:
  2584   000F30  5003               	movf	___awmod@divisor^0,w,c
  2585   000F32  5C01               	subwf	___awmod@dividend^0,w,c
  2586   000F34  5004               	movf	(___awmod@divisor+1)^0,w,c
  2587   000F36  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  2588   000F38  A0D8               	btfss	status,0,c
  2589   000F3A  EFA1  F007         	goto	u881
  2590   000F3E  EFA3  F007         	goto	u880
  2591   000F42                     u881:
  2592   000F42  EFA7  F007         	goto	l1413
  2593   000F46                     u880:
  2594   000F46  5003               	movf	___awmod@divisor^0,w,c
  2595   000F48  5E01               	subwf	___awmod@dividend^0,f,c
  2596   000F4A  5004               	movf	(___awmod@divisor+1)^0,w,c
  2597   000F4C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  2598   000F4E                     l1413:
  2599   000F4E  90D8               	bcf	status,0,c
  2600   000F50  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  2601   000F52  3203               	rrcf	___awmod@divisor^0,f,c
  2602   000F54  2E05               	decfsz	___awmod@counter^0,f,c
  2603   000F56  EF98  F007         	goto	l1409
  2604   000F5A                     l1417:
  2605   000F5A  5006               	movf	___awmod@sign^0,w,c
  2606   000F5C  B4D8               	btfsc	status,2,c
  2607   000F5E  EFB3  F007         	goto	u891
  2608   000F62  EFB5  F007         	goto	u890
  2609   000F66                     u891:
  2610   000F66  EFB9  F007         	goto	l1421
  2611   000F6A                     u890:
  2612   000F6A  6C01               	negf	___awmod@dividend^0,c
  2613   000F6C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  2614   000F6E  B0D8               	btfsc	status,0,c
  2615   000F70  2A02               	incf	(___awmod@dividend+1)^0,f,c
  2616   000F72                     l1421:
  2617   000F72  C001  F001         	movff	___awmod@dividend,?___awmod
  2618   000F76  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  2619   000F7A  0012               	return		;funcret
  2620   000F7C                     __end_of___awmod:
  2621                           	callstack 0
  2622                           
  2623 ;; *************** function ___awdiv *****************
  2624 ;; Defined at:
  2625 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v3.00\pic\sources\c99\common\awdiv.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;  dividend        2    0[COMRAM] int 
  2628 ;;  divisor         2    2[COMRAM] int 
  2629 ;; Auto vars:     Size  Location     Type
  2630 ;;  quotient        2    6[COMRAM] int 
  2631 ;;  sign            1    5[COMRAM] unsigned char 
  2632 ;;  counter         1    4[COMRAM] unsigned char 
  2633 ;; Return value:  Size  Location     Type
  2634 ;;                  2    0[COMRAM] int 
  2635 ;; Registers used:
  2636 ;;		wreg, status,2, status,0
  2637 ;; Tracked objects:
  2638 ;;		On entry : 0/0
  2639 ;;		On exit  : 0/0
  2640 ;;		Unchanged: 0/0
  2641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2642 ;;      Params:         4       0       0       0       0       0       0       0       0
  2643 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2645 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2646 ;;Total ram usage:        8 bytes
  2647 ;; Hardware stack levels used: 1
  2648 ;; Hardware stack levels required when called: 1
  2649 ;; This function calls:
  2650 ;;		Nothing
  2651 ;; This function is called by:
  2652 ;;		_dtoa
  2653 ;; This function uses a non-reentrant model
  2654 ;;
  2655                           
  2656                           	psect	text12
  2657   000E0C                     __ptext12:
  2658                           	callstack 0
  2659   000E0C                     ___awdiv:
  2660                           	callstack 25
  2661   000E0C  6A06               	clrf	___awdiv@sign^0,c
  2662   000E0E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2663   000E10  EF0E  F007         	goto	u780
  2664   000E14  EF0C  F007         	goto	u781
  2665   000E18                     u781:
  2666   000E18  EF14  F007         	goto	l1353
  2667   000E1C                     u780:
  2668   000E1C  6C03               	negf	___awdiv@divisor^0,c
  2669   000E1E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2670   000E20  B0D8               	btfsc	status,0,c
  2671   000E22  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2672   000E24  0E01               	movlw	1
  2673   000E26  6E06               	movwf	___awdiv@sign^0,c
  2674   000E28                     l1353:
  2675   000E28  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2676   000E2A  EF1B  F007         	goto	u790
  2677   000E2E  EF19  F007         	goto	u791
  2678   000E32                     u791:
  2679   000E32  EF21  F007         	goto	l1359
  2680   000E36                     u790:
  2681   000E36  6C01               	negf	___awdiv@dividend^0,c
  2682   000E38  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2683   000E3A  B0D8               	btfsc	status,0,c
  2684   000E3C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  2685   000E3E  0E01               	movlw	1
  2686   000E40  1A06               	xorwf	___awdiv@sign^0,f,c
  2687   000E42                     l1359:
  2688   000E42  0E00               	movlw	0
  2689   000E44  6E08               	movwf	(___awdiv@quotient+1)^0,c
  2690   000E46  0E00               	movlw	0
  2691   000E48  6E07               	movwf	___awdiv@quotient^0,c
  2692   000E4A  5003               	movf	___awdiv@divisor^0,w,c
  2693   000E4C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  2694   000E4E  B4D8               	btfsc	status,2,c
  2695   000E50  EF2C  F007         	goto	u801
  2696   000E54  EF2E  F007         	goto	u800
  2697   000E58                     u801:
  2698   000E58  EF56  F007         	goto	l1381
  2699   000E5C                     u800:
  2700   000E5C  0E01               	movlw	1
  2701   000E5E  6E05               	movwf	___awdiv@counter^0,c
  2702   000E60  EF36  F007         	goto	l1367
  2703   000E64                     l1365:
  2704   000E64  90D8               	bcf	status,0,c
  2705   000E66  3603               	rlcf	___awdiv@divisor^0,f,c
  2706   000E68  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  2707   000E6A  2A05               	incf	___awdiv@counter^0,f,c
  2708   000E6C                     l1367:
  2709   000E6C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  2710   000E6E  EF3B  F007         	goto	u811
  2711   000E72  EF3D  F007         	goto	u810
  2712   000E76                     u811:
  2713   000E76  EF32  F007         	goto	l1365
  2714   000E7A                     u810:
  2715   000E7A                     l1369:
  2716   000E7A  90D8               	bcf	status,0,c
  2717   000E7C  3607               	rlcf	___awdiv@quotient^0,f,c
  2718   000E7E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  2719   000E80  5003               	movf	___awdiv@divisor^0,w,c
  2720   000E82  5C01               	subwf	___awdiv@dividend^0,w,c
  2721   000E84  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2722   000E86  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  2723   000E88  A0D8               	btfss	status,0,c
  2724   000E8A  EF49  F007         	goto	u821
  2725   000E8E  EF4B  F007         	goto	u820
  2726   000E92                     u821:
  2727   000E92  EF50  F007         	goto	l1377
  2728   000E96                     u820:
  2729   000E96  5003               	movf	___awdiv@divisor^0,w,c
  2730   000E98  5E01               	subwf	___awdiv@dividend^0,f,c
  2731   000E9A  5004               	movf	(___awdiv@divisor+1)^0,w,c
  2732   000E9C  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  2733   000E9E  8007               	bsf	___awdiv@quotient^0,0,c
  2734   000EA0                     l1377:
  2735   000EA0  90D8               	bcf	status,0,c
  2736   000EA2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  2737   000EA4  3203               	rrcf	___awdiv@divisor^0,f,c
  2738   000EA6  2E05               	decfsz	___awdiv@counter^0,f,c
  2739   000EA8  EF3D  F007         	goto	l1369
  2740   000EAC                     l1381:
  2741   000EAC  5006               	movf	___awdiv@sign^0,w,c
  2742   000EAE  B4D8               	btfsc	status,2,c
  2743   000EB0  EF5C  F007         	goto	u831
  2744   000EB4  EF5E  F007         	goto	u830
  2745   000EB8                     u831:
  2746   000EB8  EF62  F007         	goto	l1385
  2747   000EBC                     u830:
  2748   000EBC  6C07               	negf	___awdiv@quotient^0,c
  2749   000EBE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  2750   000EC0  B0D8               	btfsc	status,0,c
  2751   000EC2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  2752   000EC4                     l1385:
  2753   000EC4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  2754   000EC8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  2755   000ECC  0012               	return		;funcret
  2756   000ECE                     __end_of___awdiv:
  2757                           	callstack 0
  2758                           
  2759 ;; *************** function _setup_adc *****************
  2760 ;; Defined at:
  2761 ;;		line 32 in file "main.c"
  2762 ;; Parameters:    Size  Location     Type
  2763 ;;		None
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;		None
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  1    wreg      void 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2775 ;;      Params:         0       0       0       0       0       0       0       0       0
  2776 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2777 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2778 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2779 ;;Total ram usage:        0 bytes
  2780 ;; Hardware stack levels used: 1
  2781 ;; Hardware stack levels required when called: 1
  2782 ;; This function calls:
  2783 ;;		Nothing
  2784 ;; This function is called by:
  2785 ;;		_main
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           	psect	text13
  2790   00146A                     __ptext13:
  2791                           	callstack 0
  2792   00146A                     _setup_adc:
  2793                           	callstack 29
  2794   00146A                     
  2795                           ;main.c: 33: void main(void) {
  2796   00146A  0E01               	movlw	1
  2797   00146C  6EC2               	movwf	194,c	;volatile
  2798                           
  2799                           ;main.c: 35: 
  2800   00146E  0E0E               	movlw	14
  2801   001470  6EC1               	movwf	193,c	;volatile
  2802                           
  2803                           ;main.c: 37: 
  2804   001472  0EAE               	movlw	174
  2805   001474  6EC0               	movwf	192,c	;volatile
  2806   001476  0012               	return		;funcret
  2807   001478                     __end_of_setup_adc:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function _read_adc *****************
  2811 ;; Defined at:
  2812 ;;		line 41 in file "main.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  2    0[COMRAM] unsigned int 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2, status,0
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2826 ;;      Params:         2       0       0       0       0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2828 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2829 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2830 ;;Total ram usage:        4 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 1
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text14
  2841   001442                     __ptext14:
  2842                           	callstack 0
  2843   001442                     _read_adc:
  2844                           	callstack 29
  2845   001442                     
  2846                           ;main.c: 42:     setup_adc();
  2847   001442  82C2               	bsf	194,1,c	;volatile
  2848   001444                     l89:
  2849   001444  B2C2               	btfsc	194,1,c	;volatile
  2850   001446  EF27  F00A         	goto	u1181
  2851   00144A  EF29  F00A         	goto	u1180
  2852   00144E                     u1181:
  2853   00144E  EF22  F00A         	goto	l89
  2854   001452                     u1180:
  2855   001452                     
  2856                           ;main.c: 44: 
  2857   001452  50C3               	movf	195,w,c	;volatile
  2858   001454  CFC4 F003          	movff	4036,??_read_adc	;volatile
  2859   001458  6A04               	clrf	(??_read_adc+1)^0,c
  2860   00145A  C003  F004         	movff	??_read_adc,??_read_adc+1
  2861   00145E  6A03               	clrf	??_read_adc^0,c
  2862   001460  1003               	iorwf	??_read_adc^0,w,c
  2863   001462  6E01               	movwf	?_read_adc^0,c
  2864   001464  5004               	movf	(??_read_adc+1)^0,w,c
  2865   001466  6E02               	movwf	(?_read_adc+1)^0,c
  2866   001468  0012               	return		;funcret
  2867   00146A                     __end_of_read_adc:
  2868                           	callstack 0
  2869                           
  2870 ;; *************** function _Posiciona_LCD *****************
  2871 ;; Defined at:
  2872 ;;		line 37 in file "./lcd.h"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  linha           1    wreg     unsigned char 
  2875 ;;  coluna          1    2[COMRAM] unsigned char 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  linha           1    3[COMRAM] unsigned char 
  2878 ;;  x               1    4[COMRAM] unsigned char 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  1    wreg      void 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0, cstack
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2888 ;;      Params:         1       0       0       0       0       0       0       0       0
  2889 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2890 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2891 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2892 ;;Total ram usage:        3 bytes
  2893 ;; Hardware stack levels used: 1
  2894 ;; Hardware stack levels required when called: 2
  2895 ;; This function calls:
  2896 ;;		_Comando_LCD
  2897 ;; This function is called by:
  2898 ;;		_main
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           	psect	text15
  2903   001154                     __ptext15:
  2904                           	callstack 0
  2905   001154                     _Posiciona_LCD:
  2906                           	callstack 28
  2907                           
  2908                           ;incstack = 0
  2909                           ;Posiciona_LCD@linha stored from wreg
  2910   001154  6E04               	movwf	Posiciona_LCD@linha^0,c
  2911   001156                     
  2912                           ;./lcd.h: 38:    unsigned char x = 0;
  2913   001156  6A05               	clrf	Posiciona_LCD@x^0,c
  2914   001158                     
  2915                           ;./lcd.h: 39:    --coluna;
  2916   001158  0603               	decf	Posiciona_LCD@coluna^0,f,c
  2917                           
  2918                           ;./lcd.h: 40:    switch (linha){
  2919   00115A  EFC3  F008         	goto	l1597
  2920   00115E                     l1587:
  2921   00115E  5003               	movf	Posiciona_LCD@coluna^0,w,c
  2922   001160  0F80               	addlw	128
  2923   001162  6E05               	movwf	Posiciona_LCD@x^0,c
  2924                           
  2925                           ;./lcd.h: 42:                break;
  2926   001164  EFD6  F008         	goto	l1599
  2927   001168                     l1589:
  2928   001168  5003               	movf	Posiciona_LCD@coluna^0,w,c
  2929   00116A  0FC0               	addlw	192
  2930   00116C  6E05               	movwf	Posiciona_LCD@x^0,c
  2931                           
  2932                           ;./lcd.h: 44:                break;
  2933   00116E  EFD6  F008         	goto	l1599
  2934   001172                     l1591:
  2935   001172  5003               	movf	Posiciona_LCD@coluna^0,w,c
  2936   001174  0F90               	addlw	144
  2937   001176  6E05               	movwf	Posiciona_LCD@x^0,c
  2938                           
  2939                           ;./lcd.h: 46:                break;
  2940   001178  EFD6  F008         	goto	l1599
  2941   00117C                     l1593:
  2942   00117C  5003               	movf	Posiciona_LCD@coluna^0,w,c
  2943   00117E  0FD0               	addlw	208
  2944   001180  6E05               	movwf	Posiciona_LCD@x^0,c
  2945                           
  2946                           ;./lcd.h: 48:                break;
  2947   001182  EFD6  F008         	goto	l1599
  2948   001186                     l1597:
  2949   001186  5004               	movf	Posiciona_LCD@linha^0,w,c
  2950                           
  2951                           ; Switch size 1, requested type "simple"
  2952                           ; Number of cases is 4, Range of values is 1 to 4
  2953                           ; switch strategies available:
  2954                           ; Name         Instructions Cycles
  2955                           ; simple_byte           13     7 (average)
  2956                           ;	Chosen strategy is simple_byte
  2957   001188  0A01               	xorlw	1	; case 1
  2958   00118A  B4D8               	btfsc	status,2,c
  2959   00118C  EFAF  F008         	goto	l1587
  2960   001190  0A03               	xorlw	3	; case 2
  2961   001192  B4D8               	btfsc	status,2,c
  2962   001194  EFB4  F008         	goto	l1589
  2963   001198  0A01               	xorlw	1	; case 3
  2964   00119A  B4D8               	btfsc	status,2,c
  2965   00119C  EFB9  F008         	goto	l1591
  2966   0011A0  0A07               	xorlw	7	; case 4
  2967   0011A2  B4D8               	btfsc	status,2,c
  2968   0011A4  EFBE  F008         	goto	l1593
  2969   0011A8  EFD6  F008         	goto	l1599
  2970   0011AC                     l1599:
  2971                           
  2972                           ;./lcd.h: 51:    if (x != 0) Comando_LCD (x);
  2973   0011AC  5005               	movf	Posiciona_LCD@x^0,w,c
  2974   0011AE  B4D8               	btfsc	status,2,c
  2975   0011B0  EFDC  F008         	goto	u1131
  2976   0011B4  EFDE  F008         	goto	u1130
  2977   0011B8                     u1131:
  2978   0011B8  EFE1  F008         	goto	l62
  2979   0011BC                     u1130:
  2980   0011BC  5005               	movf	Posiciona_LCD@x^0,w,c
  2981   0011BE  ECF5  F009         	call	_Comando_LCD
  2982   0011C2                     l62:
  2983   0011C2  0012               	return		;funcret
  2984   0011C4                     __end_of_Posiciona_LCD:
  2985                           	callstack 0
  2986                           
  2987 ;; *************** function _Inicializa_LCD *****************
  2988 ;; Defined at:
  2989 ;;		line 85 in file "./lcd.h"
  2990 ;; Parameters:    Size  Location     Type
  2991 ;;		None
  2992 ;; Auto vars:     Size  Location     Type
  2993 ;;  x               1    3[COMRAM] unsigned char 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3003 ;;      Params:         0       0       0       0       0       0       0       0       0
  3004 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3005 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3006 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3007 ;;Total ram usage:        2 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 2
  3010 ;; This function calls:
  3011 ;;		_Comando_LCD
  3012 ;; This function is called by:
  3013 ;;		_main
  3014 ;; This function uses a non-reentrant model
  3015 ;;
  3016                           
  3017                           	psect	text16
  3018   001232                     __ptext16:
  3019                           	callstack 0
  3020   001232                     _Inicializa_LCD:
  3021                           	callstack 28
  3022   001232                     
  3023                           ;./lcd.h: 86:    unsigned char x = 0;
  3024   001232  6A04               	clrf	Inicializa_LCD@x^0,c
  3025   001234                     
  3026                           ;./lcd.h: 87:    static unsigned char ini [] = {0x38,0x38,0x38,0x0C,0x06,0x01,0x00};;./l
      +                          cd.h: 89:    ADCON1 = 0x0F;
  3027   001234  0E0F               	movlw	15
  3028   001236  6EC1               	movwf	193,c	;volatile
  3029   001238                     
  3030                           ;./lcd.h: 91:    PORTD = 0x00;
  3031   001238  6A83               	clrf	131,c	;volatile
  3032   00123A                     
  3033                           ;./lcd.h: 92:    PORTE = PORTE & 0xF8;
  3034   00123A  5084               	movf	132,w,c	;volatile
  3035   00123C  0BF8               	andlw	248
  3036   00123E  6E84               	movwf	132,c	;volatile
  3037   001240                     
  3038                           ;./lcd.h: 93:    TRISD = 0x00;
  3039   001240  6A95               	clrf	149,c	;volatile
  3040   001242                     
  3041                           ;./lcd.h: 94:    TRISE = TRISE & 0xF8;
  3042   001242  5096               	movf	150,w,c	;volatile
  3043   001244  0BF8               	andlw	248
  3044   001246  6E96               	movwf	150,c	;volatile
  3045                           
  3046                           ;./lcd.h: 96:    while (ini [x] != 0x00){
  3047   001248  EF35  F009         	goto	l1631
  3048   00124C                     l1625:
  3049                           
  3050                           ;./lcd.h: 97:       Comando_LCD (ini[x]);
  3051   00124C  5004               	movf	Inicializa_LCD@x^0,w,c
  3052   00124E  0F80               	addlw	low Inicializa_LCD@ini
  3053   001250  6ED9               	movwf	fsr2l,c
  3054   001252  6ADA               	clrf	fsr2h,c
  3055   001254  50DF               	movf	indf2,w,c
  3056   001256  ECF5  F009         	call	_Comando_LCD
  3057   00125A                     
  3058                           ;./lcd.h: 98:       ++ x;
  3059   00125A  2A04               	incf	Inicializa_LCD@x^0,f,c
  3060   00125C                     
  3061                           ;./lcd.h: 99:       _delay((unsigned long)((5)*(2000000/4000.0)));
  3062   00125C  0E04               	movlw	4
  3063   00125E  6E03               	movwf	??_Inicializa_LCD^0,c
  3064   001260  0E3E               	movlw	62
  3065   001262                     u1457:
  3066   001262  2EE8               	decfsz	wreg,f,c
  3067   001264  D7FE               	bra	u1457
  3068   001266  2E03               	decfsz	??_Inicializa_LCD^0,f,c
  3069   001268  D7FC               	bra	u1457
  3070   00126A                     l1631:
  3071                           
  3072                           ;./lcd.h: 96:    while (ini [x] != 0x00){
  3073   00126A  5004               	movf	Inicializa_LCD@x^0,w,c
  3074   00126C  0F80               	addlw	low Inicializa_LCD@ini
  3075   00126E  6ED9               	movwf	fsr2l,c
  3076   001270  6ADA               	clrf	fsr2h,c
  3077   001272  50DF               	movf	indf2,w,c
  3078   001274  A4D8               	btfss	status,2,c
  3079   001276  EF3F  F009         	goto	u1171
  3080   00127A  EF41  F009         	goto	u1170
  3081   00127E                     u1171:
  3082   00127E  EF26  F009         	goto	l1625
  3083   001282                     u1170:
  3084   001282  0012               	return		;funcret
  3085   001284                     __end_of_Inicializa_LCD:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _Comando_LCD *****************
  3089 ;; Defined at:
  3090 ;;		line 23 in file "./lcd.h"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;  comando         1    wreg     unsigned char 
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  comando         1    1[COMRAM] unsigned char 
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3104 ;;      Params:         0       0       0       0       0       0       0       0       0
  3105 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3106 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3107 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3108 ;;Total ram usage:        2 bytes
  3109 ;; Hardware stack levels used: 1
  3110 ;; Hardware stack levels required when called: 1
  3111 ;; This function calls:
  3112 ;;		Nothing
  3113 ;; This function is called by:
  3114 ;;		_Posiciona_LCD
  3115 ;;		_Inicializa_LCD
  3116 ;; This function uses a non-reentrant model
  3117 ;;
  3118                           
  3119                           	psect	text17
  3120   0013EA                     __ptext17:
  3121                           	callstack 0
  3122   0013EA                     _Comando_LCD:
  3123                           	callstack 28
  3124                           
  3125                           ;incstack = 0
  3126                           ;Comando_LCD@comando stored from wreg
  3127   0013EA  6E02               	movwf	Comando_LCD@comando^0,c
  3128   0013EC                     
  3129                           ;./lcd.h: 24:    PORTEbits.RE0 = 0;
  3130   0013EC  9084               	bcf	132,0,c	;volatile
  3131   0013EE                     
  3132                           ;./lcd.h: 27:    PORTD = comando;
  3133   0013EE  C002  FF83         	movff	Comando_LCD@comando,3971	;volatile
  3134   0013F2                     
  3135                           ;./lcd.h: 28:    PORTEbits.RE1 = 1;
  3136   0013F2  8284               	bsf	132,1,c	;volatile
  3137   0013F4                     
  3138                           ;./lcd.h: 29:    _delay((unsigned long)((5)*(2000000/4000.0)));
  3139   0013F4  0E04               	movlw	4
  3140   0013F6  6E01               	movwf	??_Comando_LCD^0,c
  3141   0013F8  0E3E               	movlw	62
  3142   0013FA                     u1467:
  3143   0013FA  2EE8               	decfsz	wreg,f,c
  3144   0013FC  D7FE               	bra	u1467
  3145   0013FE  2E01               	decfsz	??_Comando_LCD^0,f,c
  3146   001400  D7FC               	bra	u1467
  3147   001402                     
  3148                           ;./lcd.h: 30:    PORTEbits.RE1 = 0;
  3149   001402  9284               	bcf	132,1,c	;volatile
  3150   001404                     
  3151                           ;./lcd.h: 31:    _delay((unsigned long)((10)*(2000000/4000.0)));
  3152   001404  0E07               	movlw	7
  3153   001406  6E01               	movwf	??_Comando_LCD^0,c
  3154   001408  0E7D               	movlw	125
  3155   00140A                     u1477:
  3156   00140A  2EE8               	decfsz	wreg,f,c
  3157   00140C  D7FE               	bra	u1477
  3158   00140E  2E01               	decfsz	??_Comando_LCD^0,f,c
  3159   001410  D7FC               	bra	u1477
  3160   001412  0000               	nop	
  3161   001414  0012               	return		;funcret
  3162   001416                     __end_of_Comando_LCD:
  3163                           	callstack 0
  3164                           
  3165 ;; *************** function _Escreve_LCD *****************
  3166 ;; Defined at:
  3167 ;;		line 73 in file "./lcd.h"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  caracter        2    2[COMRAM] PTR unsigned char 
  3170 ;;		 -> STR_8(8), STR_7(14), STR_6(13), main@lcd_buffer(17), 
  3171 ;;		 -> STR_4(17), STR_3(13), STR_2(12), STR_1(13), 
  3172 ;; Auto vars:     Size  Location     Type
  3173 ;;		None
  3174 ;; Return value:  Size  Location     Type
  3175 ;;                  1    wreg      void 
  3176 ;; Registers used:
  3177 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3178 ;; Tracked objects:
  3179 ;;		On entry : 0/0
  3180 ;;		On exit  : 0/0
  3181 ;;		Unchanged: 0/0
  3182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3183 ;;      Params:         2       0       0       0       0       0       0       0       0
  3184 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3185 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3186 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3187 ;;Total ram usage:        3 bytes
  3188 ;; Hardware stack levels used: 1
  3189 ;; Hardware stack levels required when called: 2
  3190 ;; This function calls:
  3191 ;;		_Escreve_C_LCD
  3192 ;; This function is called by:
  3193 ;;		_main
  3194 ;; This function uses a non-reentrant model
  3195 ;;
  3196                           
  3197                           	psect	text18
  3198   0011C4                     __ptext18:
  3199                           	callstack 0
  3200   0011C4                     _Escreve_LCD:
  3201                           	callstack 28
  3202   0011C4                     
  3203                           ;./lcd.h: 74:    while (*caracter != '\0'){
  3204   0011C4  EF00  F009         	goto	l1611
  3205   0011C8                     l1605:
  3206                           
  3207                           ;./lcd.h: 75:       Escreve_C_LCD (*caracter);
  3208   0011C8  C003  FFF6         	movff	Escreve_LCD@caracter,tblptrl
  3209   0011CC  C004  FFF7         	movff	Escreve_LCD@caracter+1,tblptrh
  3210   0011D0  6AF8               	clrf	tblptru,c
  3211   0011D2  0E07               	movlw	(high __ramtop+-1)
  3212   0011D4  64F7               	cpfsgt	tblptrh,c
  3213   0011D6  D003               	bra	u1147
  3214   0011D8  0008               	tblrd		*
  3215   0011DA  50F5               	movf	tablat,w,c
  3216   0011DC  D005               	bra	u1140
  3217   0011DE                     u1147:
  3218   0011DE  CFF6 FFE1          	movff	tblptrl,fsr1l
  3219   0011E2  CFF7 FFE2          	movff	tblptrh,fsr1h
  3220   0011E6  50E7               	movf	indf1,w,c
  3221   0011E8                     u1140:
  3222   0011E8  EC84  F009         	call	_Escreve_C_LCD
  3223   0011EC                     
  3224                           ;./lcd.h: 76:       ++caracter;
  3225   0011EC  4A03               	infsnz	Escreve_LCD@caracter^0,f,c
  3226   0011EE  2A04               	incf	(Escreve_LCD@caracter+1)^0,f,c
  3227   0011F0                     
  3228                           ;./lcd.h: 77:       _delay((unsigned long)((10)*(2000000/4000.0)));
  3229   0011F0  0E07               	movlw	7
  3230   0011F2  6E05               	movwf	??_Escreve_LCD^0,c
  3231   0011F4  0E7D               	movlw	125
  3232   0011F6                     u1487:
  3233   0011F6  2EE8               	decfsz	wreg,f,c
  3234   0011F8  D7FE               	bra	u1487
  3235   0011FA  2E05               	decfsz	??_Escreve_LCD^0,f,c
  3236   0011FC  D7FC               	bra	u1487
  3237   0011FE  0000               	nop	
  3238   001200                     l1611:
  3239                           
  3240                           ;./lcd.h: 74:    while (*caracter != '\0'){
  3241   001200  C003  FFF6         	movff	Escreve_LCD@caracter,tblptrl
  3242   001204  C004  FFF7         	movff	Escreve_LCD@caracter+1,tblptrh
  3243   001208  6AF8               	clrf	tblptru,c
  3244   00120A  0E07               	movlw	(high __ramtop+-1)
  3245   00120C  64F7               	cpfsgt	tblptrh,c
  3246   00120E  D003               	bra	u1157
  3247   001210  0008               	tblrd		*
  3248   001212  50F5               	movf	tablat,w,c
  3249   001214  D005               	bra	u1150
  3250   001216                     u1157:
  3251   001216  CFF6 FFE1          	movff	tblptrl,fsr1l
  3252   00121A  CFF7 FFE2          	movff	tblptrh,fsr1h
  3253   00121E  50E7               	movf	indf1,w,c
  3254   001220                     u1150:
  3255   001220  0900               	iorlw	0
  3256   001222  A4D8               	btfss	status,2,c
  3257   001224  EF16  F009         	goto	u1161
  3258   001228  EF18  F009         	goto	u1160
  3259   00122C                     u1161:
  3260   00122C  EFE4  F008         	goto	l1605
  3261   001230                     u1160:
  3262   001230  0012               	return		;funcret
  3263   001232                     __end_of_Escreve_LCD:
  3264                           	callstack 0
  3265                           
  3266 ;; *************** function _Escreve_C_LCD *****************
  3267 ;; Defined at:
  3268 ;;		line 57 in file "./lcd.h"
  3269 ;; Parameters:    Size  Location     Type
  3270 ;;  caracter        1    wreg     unsigned char 
  3271 ;; Auto vars:     Size  Location     Type
  3272 ;;  caracter        1    1[COMRAM] unsigned char 
  3273 ;; Return value:  Size  Location     Type
  3274 ;;                  1    wreg      void 
  3275 ;; Registers used:
  3276 ;;		wreg, status,2, cstack
  3277 ;; Tracked objects:
  3278 ;;		On entry : 0/0
  3279 ;;		On exit  : 0/0
  3280 ;;		Unchanged: 0/0
  3281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3282 ;;      Params:         0       0       0       0       0       0       0       0       0
  3283 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3284 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3285 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3286 ;;Total ram usage:        2 bytes
  3287 ;; Hardware stack levels used: 1
  3288 ;; Hardware stack levels required when called: 1
  3289 ;; This function calls:
  3290 ;;		Nothing
  3291 ;; This function is called by:
  3292 ;;		_Escreve_LCD
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           
  3296                           	psect	text19
  3297   001308                     __ptext19:
  3298                           	callstack 0
  3299   001308                     _Escreve_C_LCD:
  3300                           	callstack 28
  3301                           
  3302                           ;incstack = 0
  3303                           ;Escreve_C_LCD@caracter stored from wreg
  3304   001308  6E02               	movwf	Escreve_C_LCD@caracter^0,c
  3305   00130A                     
  3306                           ;./lcd.h: 58:    PORTEbits.RE0 = 1;
  3307   00130A  8084               	bsf	132,0,c	;volatile
  3308                           
  3309                           ;./lcd.h: 61:    PORTEbits.RE1 = 0;
  3310   00130C  9284               	bcf	132,1,c	;volatile
  3311   00130E                     
  3312                           ;./lcd.h: 62:    _delay((unsigned long)((5)*(2000000/4000.0)));
  3313   00130E  0E04               	movlw	4
  3314   001310  6E01               	movwf	??_Escreve_C_LCD^0,c
  3315   001312  0E3E               	movlw	62
  3316   001314                     u1497:
  3317   001314  2EE8               	decfsz	wreg,f,c
  3318   001316  D7FE               	bra	u1497
  3319   001318  2E01               	decfsz	??_Escreve_C_LCD^0,f,c
  3320   00131A  D7FC               	bra	u1497
  3321   00131C                     
  3322                           ;./lcd.h: 63:    PORTD = caracter;
  3323   00131C  C002  FF83         	movff	Escreve_C_LCD@caracter,3971	;volatile
  3324   001320                     
  3325                           ;./lcd.h: 64:    PORTEbits.RE1 = 1;
  3326   001320  8284               	bsf	132,1,c	;volatile
  3327   001322                     
  3328                           ;./lcd.h: 65:    _delay((unsigned long)((10)*(2000000/4000.0)));
  3329   001322  0E07               	movlw	7
  3330   001324  6E01               	movwf	??_Escreve_C_LCD^0,c
  3331   001326  0E7D               	movlw	125
  3332   001328                     u1507:
  3333   001328  2EE8               	decfsz	wreg,f,c
  3334   00132A  D7FE               	bra	u1507
  3335   00132C  2E01               	decfsz	??_Escreve_C_LCD^0,f,c
  3336   00132E  D7FC               	bra	u1507
  3337   001330  0000               	nop	
  3338   001332                     
  3339                           ;./lcd.h: 66:    PORTEbits.RE1 = 0;
  3340   001332  9284               	bcf	132,1,c	;volatile
  3341   001334                     
  3342                           ;./lcd.h: 67:    _delay((unsigned long)((10)*(2000000/4000.0)));
  3343   001334  0E07               	movlw	7
  3344   001336  6E01               	movwf	??_Escreve_C_LCD^0,c
  3345   001338  0E7D               	movlw	125
  3346   00133A                     u1517:
  3347   00133A  2EE8               	decfsz	wreg,f,c
  3348   00133C  D7FE               	bra	u1517
  3349   00133E  2E01               	decfsz	??_Escreve_C_LCD^0,f,c
  3350   001340  D7FC               	bra	u1517
  3351   001342  0000               	nop	
  3352   001344  0012               	return		;funcret
  3353   001346                     __end_of_Escreve_C_LCD:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _isr *****************
  3357 ;; Defined at:
  3358 ;;		line 48 in file "main.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3375 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3376 ;;Total ram usage:        0 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; This function calls:
  3379 ;;		Nothing
  3380 ;; This function is called by:
  3381 ;;		Interrupt level 2
  3382 ;; This function uses a non-reentrant model
  3383 ;;
  3384                           
  3385                           	psect	intcode
  3386   000008                     __pintcode:
  3387                           	callstack 0
  3388   000008                     _isr:
  3389                           	callstack 22
  3390                           
  3391                           ;incstack = 0
  3392   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3393   00000A  ED0B  F00A         	call	int_func,f	;refresh shadow registers
  3394                           
  3395                           	psect	intcode_body
  3396   001416                     __pintcode_body:
  3397                           	callstack 22
  3398   001416                     int_func:
  3399                           	callstack 22
  3400   001416  0006               	pop		; remove dummy address from shadow register refresh
  3401   001418                     
  3402                           ;main.c: 49: 
  3403   001418  A2F2               	btfss	242,1,c	;volatile
  3404   00141A  EF11  F00A         	goto	i2u47_41
  3405   00141E  EF13  F00A         	goto	i2u47_40
  3406   001422                     i2u47_41:
  3407   001422  EF1F  F00A         	goto	i2l98
  3408   001426                     i2u47_40:
  3409   001426                     
  3410                           ;main.c: 50:     TRISBbits.TRISB0 = 1;
  3411   001426  92F2               	bcf	242,1,c	;volatile
  3412   001428                     
  3413                           ;main.c: 52:     TRISCbits.TRISC2 = 0;
  3414   001428  5058               	movf	_alarme_ativo^0,w,c	;volatile
  3415   00142A  B4D8               	btfsc	status,2,c
  3416   00142C  EF1A  F00A         	goto	i2u48_41
  3417   001430  EF1D  F00A         	goto	i2u48_40
  3418   001434                     i2u48_41:
  3419   001434  0E01               	movlw	1
  3420   001436  EF1E  F00A         	goto	i2u49_40
  3421   00143A                     i2u48_40:
  3422   00143A  0E00               	movlw	0
  3423   00143C                     i2u49_40:
  3424   00143C  6E58               	movwf	_alarme_ativo^0,c	;volatile
  3425   00143E                     i2l98:
  3426   00143E  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3427   001440  0011               	retfie		f
  3428   001442                     __end_of_isr:
  3429                           	callstack 0
  3430                           
  3431                           	psect	rparam
  3432   000001                     ___rparam_used  equ	1
  3433   000000                     ___param_bank   equ	0
  3434   000000                     __Lparam        equ	__Lrparam
  3435   000000                     __Hparam        equ	__Hrparam
  3436                           
  3437                           	psect	temp
  3438   000059                     btemp:
  3439                           	callstack 0
  3440   000059                     	ds	1
  3441   000059                     int$flags       set	btemp
  3442   00005A                     wtemp8          set	btemp+1
  3443   00005A                     ttemp5          set	btemp+1
  3444   00005D                     ttemp6          set	btemp+4
  3445   000061                     ttemp7          set	btemp+8
  3446                           
  3447                           	psect	config
  3448                           
  3449                           ;Config register CONFIG1L @ 0x300000
  3450                           ;	unspecified, using default values
  3451                           ;	PLL Prescaler Selection bits
  3452                           ;	PLLDIV = 0x0, unprogrammed default
  3453                           ;	System Clock Postscaler Selection bits
  3454                           ;	CPUDIV = 0x0, unprogrammed default
  3455                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  3456                           ;	USBDIV = 0x0, unprogrammed default
  3457   300000                     	org	3145728
  3458   300000  00                 	db	0
  3459                           
  3460                           ;Config register CONFIG1H @ 0x300001
  3461                           ;	Oscillator Selection bits
  3462                           ;	FOSC = HS, HS oscillator (HS)
  3463                           ;	Fail-Safe Clock Monitor Enable bit
  3464                           ;	FCMEN = 0x0, unprogrammed default
  3465                           ;	Internal/External Oscillator Switchover bit
  3466                           ;	IESO = 0x0, unprogrammed default
  3467   300001                     	org	3145729
  3468   300001  0C                 	db	12
  3469                           
  3470                           ;Config register CONFIG2L @ 0x300002
  3471                           ;	Power-up Timer Enable bit
  3472                           ;	PWRT = OFF, PWRT disabled
  3473                           ;	Brown-out Reset Enable bits
  3474                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  3475                           ;	Brown-out Reset Voltage bits
  3476                           ;	BORV = 0x3, unprogrammed default
  3477                           ;	USB Voltage Regulator Enable bit
  3478                           ;	VREGEN = 0x0, unprogrammed default
  3479   300002                     	org	3145730
  3480   300002  19                 	db	25
  3481                           
  3482                           ;Config register CONFIG2H @ 0x300003
  3483                           ;	Watchdog Timer Enable bit
  3484                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  3485                           ;	Watchdog Timer Postscale Select bits
  3486                           ;	WDTPS = 0xF, unprogrammed default
  3487   300003                     	org	3145731
  3488   300003  1E                 	db	30
  3489                           
  3490                           ; Padding undefined space
  3491   300004                     	org	3145732
  3492   300004  FF                 	db	255
  3493                           
  3494                           ;Config register CONFIG3H @ 0x300005
  3495                           ;	CCP2 MUX bit
  3496                           ;	CCP2MX = 0x1, unprogrammed default
  3497                           ;	PORTB A/D Enable bit
  3498                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3499                           ;	Low-Power Timer 1 Oscillator Enable bit
  3500                           ;	LPT1OSC = 0x0, unprogrammed default
  3501                           ;	MCLR Pin Enable bit
  3502                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3503   300005                     	org	3145733
  3504   300005  81                 	db	129
  3505                           
  3506                           ;Config register CONFIG4L @ 0x300006
  3507                           ;	Stack Full/Underflow Reset Enable bit
  3508                           ;	STVREN = 0x1, unprogrammed default
  3509                           ;	Single-Supply ICSP Enable bit
  3510                           ;	LVP = OFF, Single-Supply ICSP disabled
  3511                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  3512                           ;	ICPRT = 0x0, unprogrammed default
  3513                           ;	Extended Instruction Set Enable bit
  3514                           ;	XINST = 0x0, unprogrammed default
  3515                           ;	Background Debugger Enable bit
  3516                           ;	DEBUG = 0x1, unprogrammed default
  3517   300006                     	org	3145734
  3518   300006  81                 	db	129
  3519                           
  3520                           ; Padding undefined space
  3521   300007                     	org	3145735
  3522   300007  FF                 	db	255
  3523                           tosu	equ	0xFFF
  3524                           tosh	equ	0xFFE
  3525                           tosl	equ	0xFFD
  3526                           stkptr	equ	0xFFC
  3527                           pclatu	equ	0xFFB
  3528                           pclath	equ	0xFFA
  3529                           pcl	equ	0xFF9
  3530                           tblptru	equ	0xFF8
  3531                           tblptrh	equ	0xFF7
  3532                           tblptrl	equ	0xFF6
  3533                           tablat	equ	0xFF5
  3534                           prodh	equ	0xFF4
  3535                           prodl	equ	0xFF3
  3536                           indf0	equ	0xFEF
  3537                           postinc0	equ	0xFEE
  3538                           postdec0	equ	0xFED
  3539                           preinc0	equ	0xFEC
  3540                           plusw0	equ	0xFEB
  3541                           fsr0h	equ	0xFEA
  3542                           fsr0l	equ	0xFE9
  3543                           wreg	equ	0xFE8
  3544                           indf1	equ	0xFE7
  3545                           postinc1	equ	0xFE6
  3546                           postdec1	equ	0xFE5
  3547                           preinc1	equ	0xFE4
  3548                           plusw1	equ	0xFE3
  3549                           fsr1h	equ	0xFE2
  3550                           fsr1l	equ	0xFE1
  3551                           bsr	equ	0xFE0
  3552                           indf2	equ	0xFDF
  3553                           postinc2	equ	0xFDE
  3554                           postdec2	equ	0xFDD
  3555                           preinc2	equ	0xFDC
  3556                           plusw2	equ	0xFDB
  3557                           fsr2h	equ	0xFDA
  3558                           fsr2l	equ	0xFD9
  3559                           status	equ	0xFD8

Data Sizes:
    Strings     87
    Constant    0
    Data        7
    BSS         39
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      88
    BANK0           160      0      39
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    Escreve_LCD@caracter	PTR unsigned char  size(2) Largest target is 17
		 -> main@lcd_buffer(COMRAM[17]), STR_1(CODE[13]), STR_2(CODE[12]), STR_3(CODE[13]), 
		 -> STR_4(CODE[17]), STR_6(CODE[13]), STR_7(CODE[14]), STR_8(CODE[8]), 

    f$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@lcd_buffer(COMRAM[17]), 

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputc@fp$.$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@lcd_buffer(COMRAM[17]), 

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    fputs@s	PTR const unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@buf	PTR unsigned char  size(1) Largest target is 32
		 -> dbuf(BANK0[32]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1183$buffer	PTR unsigned char  size(1) Largest target is 17
		 -> main@lcd_buffer(COMRAM[17]), 

    S1183$source	PTR const unsigned char  size(2) Largest target is 0

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_5(CODE[10]), 

    sprintf@s	PTR unsigned char  size(1) Largest target is 17
		 -> main@lcd_buffer(COMRAM[17]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 10
		 -> STR_5(CODE[10]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 10
		 -> STR_5(CODE[10]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_5(CODE[10]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 11
		 -> sprintf@f(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _Posiciona_LCD->_Comando_LCD
    _Inicializa_LCD->_Comando_LCD
    _Escreve_LCD->_Escreve_C_LCD

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                21    21      0    3463
                                             60 COMRAM    21    21      0
                        _Escreve_LCD
                     _Inicializa_LCD
                      _Posiciona_LCD
                           _read_adc
                          _setup_adc
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    14      4    3001
                                             44 COMRAM    16    12      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             4     1      3    2798
                                             40 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           10     7      3    2664
                                             31 COMRAM     9     6      3
                               _dtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (4) _read_prec_or_width                                   7     5      2     182
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                11     8      3    1825
                                             20 COMRAM    11     8      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                  7     3      4     747
                                             13 COMRAM     7     3      4
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (6) _fputs                                                5     3      2     333
                                              8 COMRAM     5     3      2
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                8     5      3     232
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _abs                                                  4     2      2      67
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     298
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     302
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup_adc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             4     2      2       0
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _Posiciona_LCD                                        3     2      1     202
                                              2 COMRAM     3     2      1
                        _Comando_LCD
 ---------------------------------------------------------------------------------
 (1) _Inicializa_LCD                                       2     2      0      75
                                              2 COMRAM     2     2      0
                        _Comando_LCD
 ---------------------------------------------------------------------------------
 (2) _Comando_LCD                                          2     2      0      29
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Escreve_LCD                                          3     1      2      68
                                              2 COMRAM     3     1      2
                      _Escreve_C_LCD
 ---------------------------------------------------------------------------------
 (2) _Escreve_C_LCD                                        2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _isr                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Escreve_LCD
     _Escreve_C_LCD
   _Inicializa_LCD
     _Comando_LCD
   _Posiciona_LCD
     _Comando_LCD
   _read_adc
   _setup_adc
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _dtoa
           ___awdiv
           ___awmod
           _abs
             ___awmod (ARG)
           _pad
             _fputc
               _putch
             _fputs
               _fputc
         _fputc
         _read_prec_or_width

 _isr (ROOT)

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0      39     24.4%
BITCOMRAM           94      0       0      0.0%
COMRAM              94     81      88     93.6%
BITBIGSFRlh         61      0       0      0.0%
BITBIGSFRh          61      0       0      0.0%
BITBIGSFRll         34      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0     127      0.0%


Microchip Technology PIC18 Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Thu Jun 12 11:03:43 2025

            ?_Escreve_C_LCD 0001                          l51 1414                          l62 11C2  
                        l71 1230                          l65 1344                          l92 1468  
                        l86 1476                          l79 1282                          l89 1444  
              ___awdiv@sign 0006                         l104 0A5C                         l346 0ECC  
                       l359 0F7A                         l813 10FA                         l821 0BAE  
                       l816 1138                         l818 1152                         l834 0CB2  
                       l842 10C8                         l870 13E8                         l838 10C0  
                       l863 1306                         l857 0E0A                         l793 13B4  
                       l882 1024                         l890 1380                         l867 13D0  
                       l893 1480                         u800 0E5C                         u801 0E58  
                       u810 0E7A                         u730 0F8C                         u811 0E76  
                       u731 0F88                         u820 0E96                         u740 0F9C  
                       u900 10D8                         u821 0E92                         u741 0F98  
                       u901 10D4                         u830 0EBC                         u750 0FC2  
                       u910 10F2                         u831 0EB8                         u751 0FBE  
                       u911 10EE                         u840 0EDE                         u760 0FF4  
                       u920 1138                         u841 0EDA                         u761 0FF0  
                       u921 1134                         u850 0EF8                         u770 1380  
                       u930 1146                         u851 0EF4                         u771 137C  
                       u931 1142                         u780 0E1C                         u860 0F12  
                       u940 13C4                         u781 0E18                         u861 0F0E  
                       u941 13C0                         u790 0E36                         u870 0F30  
                       u950 0B64                         u791 0E32                         u871 0F2C  
                       u951 0B5E                         u880 0F46                         u960 0B66  
                       u881 0F42                         u890 0F6A                         u970 0B80  
                       u891 0F66                         u971 0B7C                         u980 0B96  
                       u981 0B92                         u990 0C30                         u991 0C2C  
                       _abs 13B6                         _pad 10CA                         _isr 0008  
              ___awmod@sign 0006                         wreg 0FE8               ??_Escreve_LCD 0005  
        Comando_LCD@comando 0002                        ?_abs 0007                        l1151 1320  
                      l1153 1322                        l1145 130A                        l1401 0F00  
                      l1155 1332                        l1147 130E                        l1219 146A  
                      l1411 0F46                        l1403 0F12                        l1331 0FC2  
                      l1323 0F7C                        l1157 1334                        l1149 131C  
                      l1421 0F72                        l1413 0F4E                        l1405 0F1A  
                      l1333 0FF4                        l1325 0F8C                        l1341 1360  
                      l1501 1058                        l1351 0E24                        l1415 0F54  
                      l1407 0F22                        l1327 0F9C                        l1343 1364  
                      l1431 10F2                        l1503 1074                        l1511 0CD6  
                      l1601 11BC                        l1361 0E4A                        l1353 0E28  
                      l1345 0E0C                        l1409 0F30                        l1417 0F5A  
                      l1441 13B6                        l1329 0FA6                        l1337 1346  
                      l1433 1106                        l1425 10CA                        l1505 1092  
                      l1521 0CF6                        l1513 0CDE                        l1611 1200  
                      l1603 11C4                        l1371 0E80                        l1363 0E5C  
                      l1355 0E36                        l1347 0E0E                        l1419 0F6A  
                      l1443 13C4                        l1339 1352                        l1435 1116  
                      l1427 10D8                        l1451 0B70                        l1507 109A  
                      l1531 0D38                        l1523 0D02                        l1515 0CEA  
                      l1605 11C8                        l1621 1240                        l1613 1232  
                      l1373 0E96                        l1365 0E64                        l1381 0EAC  
                      l1357 0E3E                        l1349 0E1C                        l1437 111A  
                      l1429 10E4                        l1461 0BAA                        l1453 0B80  
                      l1445 0B50                        l1541 0D8A                        l1533 0D4C  
                      l1517 0CEE                        l1509 0CB4                        l1701 0A42  
                      l1607 11EC                        l1631 126A                        l1623 1242  
                      l1615 1234                        l1383 0EBC                        l1375 0E9E  
                      l1367 0E6C                        l1359 0E42                        l1391 0ED0  
                      l1439 1146                        l1471 0BF4                        l1463 0BB6  
                      l1455 0B86                        l1447 0B54                        l1551 0DDC  
                      l1543 0DA6                        l1535 0D5A                        l1527 0D0A  
                      l1519 0CF4                        l1711 0AB4                        l1703 0A70  
                      l1609 11F0                        l1561 13EC                        l1625 124C  
                      l1617 1238                        l1633 1442                        l1385 0EC4  
                      l1377 0EA0                        l1369 0E7A                        l1393 0EDE  
                      l1481 0C52                        l1473 0BFA                        l1465 0BBE  
                      l1457 0B96                        l1449 0B68                        l1545 0DBE  
                      l1537 0D64                        l1529 0D28                        l1641 138A  
                      l1721 0B08                        l1713 0ABE                        l1705 0A86  
                      l1571 1404                        l1563 13EE                        l1627 125A  
                      l1619 123A                        l1635 1452                        l1379 0EA6  
                      l1395 0EE6                        l1491 0C9C                        l1483 0C6C  
                      l1467 0BC4                        l1475 0C16                        l1459 0BA2  
                      l1547 0DC8                        l1539 0D6E                        l1555 0DE8  
                      l1643 1392                        l1723 0B18                        l1715 0AC8  
                      l1707 0A96                        l1651 085A                        l1565 13F2  
                      l1629 125C                        l1397 0EEA                        l1389 0ECE  
                      l1477 0C30                        l1485 0C7A                        l1469 0BF2  
                      l1573 12CA                        l1645 139A                        l1725 0B20  
                      l1717 0ADE                        l1709 0AA0                        l1661 087E  
                      l1653 085C                        l1567 13F4                        l1591 1172  
                      l1583 1156                        l1399 0EF8                        l1487 0C8A  
                      l1479 0C42                        l1495 1026                        l1575 12D2  
                      l1647 13AA                        l1639 1382                        l1727 0B30  
                      l1719 0AF2                        l1671 0888                        l1663 0880  
                      l1655 0860                        l1569 1402                        l1593 117C  
                      l1585 1158                        l1489 0C90                        l1497 102E  
                      l1577 12E2                        l1681 0892                        l1673 088A  
                      l1665 0882                        l1657 0864                        l1587 115E  
                      l1499 1050                        l1579 12FE                        l1691 08BA  
                      l1683 0894                        l1675 088C                        l1667 0884  
                      l1659 086E                        l1589 1168                        l1597 1186  
                      l1693 08CA                        l1685 0896                        l1677 088E  
                      l1669 0886                        l1599 11AC                        l1695 08CE  
                      l1687 08A0                        l1679 0890                        l1697 08E4  
                      l1689 08B0                        l1699 08F4                        ?_pad 000E  
                      ?_isr 0001                        STR_1 082D                        STR_2 083A  
                      STR_3 082D                        STR_4 0801                        STR_5 0846  
                      STR_6 0820                        STR_7 0812                        STR_8 0850  
                      u1000 0C42                        u1001 0C3E                        u1010 0C52  
                      u1011 0C4E                        u1020 0C6C                        u1100 0D8A  
                      u1021 0C68                        u1101 0D86                        u1030 0C7A  
                      u1110 0DA6                        u1031 0C76                        u1111 0DA2  
                      u1040 0C8A                        u1120 12FE                        u1200 0906  
                      u1041 0C86                        u1121 12FA                        u1201 08FE  
                      u1130 11BC                        u1050 1050                        u1131 11B8  
                      u1051 104C                        u1140 11E8                        u1060 10C0  
                      u1300 09AE                        u1220 0926                        u1061 10BC  
                      u1301 09A6                        u1221 091E                        u1150 1220  
                      u1070 0CD6                        u1071 0CD2                        u1160 1230  
                      u1080 0D38                        u1400 0ADE                        u1320 09D2  
                      u1240 0948                        u1161 122C                        u1081 0D34  
                      u1401 0ADA                        u1321 09CA                        u1241 0940  
                      u1170 1282                        u1090 0D5A                        u1410 0B08  
                      u1218 0908                        u1147 11DE                        u1171 127E  
                      u1091 0D56                        u1411 0B04                        u1180 1452  
                      u1340 09F4                        u1260 096C                        u1157 1216  
                      u1181 144E                        u1341 09EC                        u1261 0964  
                      u1318 09B0                        u1238 0928                        u1190 08F4  
                      u1191 08F0                        u1360 0A14                        u1280 098E  
                      _LATD 0F8C                        u1361 0A0C                        u1281 0986  
                      u1338 09D4                        u1258 094A                        u1507 1328  
                      u1427 08D8                        u1380 0A32                        u1517 133A  
                      u1437 0A4C                        u1381 0A2A                        u1358 09F6  
                      u1278 096E                        u1447 0B3A                        u1457 1262  
                      u1378 0A16                        u1298 0990                        u1467 13FA  
                      u1477 140A                        u1398 0A34                        u1487 11F6  
                      u1497 1314              _Inicializa_LCD 1232                        i2l98 143E  
                      abs@a 0007                        _dbuf 0060           Inicializa_LCD@ini 0080  
                      _main 085A                        _dtoa 0B50                        _prec 0054  
                      pad@i 0013                        pad@p 0010                        fsr1h 0FE2  
                      fsr2h 0FDA                        indf1 0FE7                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        btemp 0059  
                      prodh 0FF4                        prodl 0FF3                        start 000E  
       __end_of_Comando_LCD 1416                ___param_bank 0000                       ??_abs 0009  
                     ??_pad 0012                       ??_isr 0001                       ?_main 0001  
                     ?_dtoa 0015             __end_of___awdiv 0ECE             __end_of___awmod 0F7C  
           ___awdiv@divisor 0003             ___awdiv@counter 0005                vfpfcnvrt@fmt 0021  
                     _PORTD 0F83                       _PORTE 0F84                       _TRISD 0F95  
                     _TRISE 0F96       Escreve_C_LCD@caracter 0002      __end_of_Inicializa_LCD 1284  
                     _flags 0056         read_prec_or_width@c 0005         read_prec_or_width@n 0006  
                     _fputc 0F7C                       _fputs 1346                       pad@fp 000E  
                     _width 0052                       _putch 1480                       dtoa@d 0016  
                     dtoa@i 001E                       dtoa@p 001A                       dtoa@s 001D  
                     dtoa@w 001B                       tablat 0FF5         __end_of_Escreve_LCD 1232  
                     ttemp5 005A                       ttemp6 005D                       ttemp7 0061  
                     status 0FD8                       wtemp8 005A             __end_of_sprintf 13B6  
             main@adc_value 0050         Escreve_LCD@caracter 0003             __initialization 1284  
           ??_Escreve_C_LCD 0001                __end_of_main 0B50                __end_of_dtoa 0CB4  
                    ??_main 003D                      ??_dtoa 0018               __activetblptr 0002  
__end_of_read_prec_or_width 10CA             ?_Inicializa_LCD 0001                      _ADCON0 0FC2  
                    _ADCON1 0FC1                      _ADCON2 0FC0                      ?_fputc 0001  
                    ?_fputs 0009                      _ADRESH 0FC4                      _ADRESL 0FC3  
          ___awdiv@dividend 0001                      ?_putch 0001                 _Comando_LCD 13EA  
                    i2l1241 1426                      i2l1243 1428                      i2l1239 1418  
             vfpfcnvrt@done 0027                vfprintf@cfmt 002C                   ??___awdiv 0005  
                 ??___awmod 0005        read_prec_or_width@ap 0002            __end_of_read_adc 146A  
                    clear_0 12AA                      clear_1 12B6            ___awdiv@quotient 0007  
           ___awmod@divisor 0003                      isa$std 0001             ___awmod@counter 0005  
                    pad@buf 000F                      dtoa@fp 0015                      fputc@c 0001  
                    fputs@c 000B                      fputs@i 000C                      fputs@s 0009  
              __mediumconst 0800                      tblptrh 0FF7                      tblptrl 0FF6  
                    tblptru 0FF8                 _Escreve_LCD 11C4                      putch@c 0001  
          __end_of_vfprintf 1308                   ??_sprintf 0031                  __accesstop 0060  
   __end_of__initialization 12BC               ___rparam_used 0001             Inicializa_LCD@x 0004  
            __pcstackCOMRAM 0001       __end_of_Posiciona_LCD 11C4                __pidataBANK0 1478  
             __end_of_fputc 1026               __end_of_fputs 1382               __end_of_putch 1482  
              _alarme_ativo 0058                     ??_fputc 0004                     ??_fputs 000B  
                   ??_putch 0001                  __pbssBANK0 0060              main@lcd_buffer 003F  
              _alerta_ativo 0057                     i2u47_40 1426                     i2u47_41 1422  
                   i2u48_40 143A                     i2u48_41 1434                     i2u49_40 143C  
                 ?_read_adc 0001                     __Hparam 0000                     __Lparam 0000  
                   ___awdiv 0E0C                     ___awmod 0ECE                   ?_vfprintf 0029  
              __psmallconst 0800                     __pcinit 1284                     __ramtop 0800  
                   __ptext0 085A                     __ptext1 1382                     __ptext2 12CA  
                   __ptext3 0CB4                     __ptext4 1026                     __ptext5 0B50  
                   __ptext6 10CA                     __ptext7 1346                     __ptext8 0F7C  
                   __ptext9 1480            ??_Inicializa_LCD 0003       read_prec_or_width@fmt 0001  
          ___awmod@dividend 0001                     _sprintf 1382              __pintcode_body 1416  
              ?_Comando_LCD 0001        end_of_initialization 12BC                     fputc@fp 0003  
             __Lmediumconst 0000                  ??_read_adc 0003                     int_func 1416  
                   fputs@fp 000A          _read_prec_or_width 1026           __end_of_setup_adc 1478  
         __end_of_vfpfcnvrt 0E0C                     postdec1 0FE5                     postdec2 0FDD  
       ?_read_prec_or_width 0001                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 0023       __end_of_Escreve_C_LCD 1346  
                ??_vfprintf 002C                   _PORTCbits 0F82                   _PORTDbits 0F83  
                 _PORTEbits 0F84                   _TRISAbits 0F92                   _TRISBbits 0F93  
                 _TRISCbits 0F94                   _TRISDbits 0F95              Posiciona_LCD@x 0005  
              ?_Escreve_LCD 0003        ??_read_prec_or_width 0003                 vfpfcnvrt@ap 0022  
               vfpfcnvrt@cp 0028                 vfpfcnvrt@fp 0020         start_initialization 1284  
               __end_of_abs 13EA                 __end_of_pad 1154                 __end_of_isr 1442  
               vfprintf@fmt 002A                 __pdataBANK0 0080                 __pbssCOMRAM 0052  
                 _dtoa$1262 0018                   __pintcode 0008                    ?___awdiv 0001  
                  ?___awmod 0001                 __smallconst 0800                    ?_sprintf 002D  
                  _LATCbits 0F8B                    _LATDbits 0F8C               _Posiciona_LCD 1154  
                 _setup_adc 146A                   _vfpfcnvrt 0CB4                  _ADCON0bits 0FC2  
               _INTCON2bits 0FF1                   copy_data0 1298                    __Hrparam 0000  
                vfprintf@ap 002B                    __Lrparam 0000                  vfprintf@fp 0029  
            ?_Posiciona_LCD 0003                  ?_setup_adc 0001                  ?_vfpfcnvrt 0020  
                sprintf@fmt 002E                    __ptext10 13B6                    __ptext11 0ECE  
                  __ptext12 0E0C                    __ptext13 146A                    __ptext14 1442  
                  __ptext15 1154                    __ptext16 1232                    __ptext17 13EA  
                  __ptext18 11C4                    __ptext19 1308                    _read_adc 1442  
                  isa$xinst 0000                    int$flags 0059                    _vfprintf 12CA  
                _INTCONbits 0FF2                    intlevel2 0000                   sprintf@ap 0031  
           ??_Posiciona_LCD 0004                 ??_setup_adc 0001               _Escreve_C_LCD 1308  
               ??_vfpfcnvrt 0023                    sprintf@f 0032                    sprintf@s 002D  
             ??_Comando_LCD 0001         Posiciona_LCD@coluna 0003          Posiciona_LCD@linha 0004  
